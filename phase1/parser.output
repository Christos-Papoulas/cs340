Terminals unused in grammar

   REALCONST


State 153 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmts stmt
    2        | %empty

    3 stmts: stmts stmt
    4      | %empty

    5 stmt: expr SEMICOLON
    6     | ifstmt
    7     | whilestmt
    8     | forstmt
    9     | returnstmt
   10     | BREAK SEMICOLON
   11     | CONTINUE SEMICOLON
   12     | block
   13     | funcdef
   14     | SEMICOLON

   15 expr: assignexpr
   16     | expr PLUS expr
   17     | expr MINUS expr
   18     | expr MULTIPLIES expr
   19     | expr DIVIDES expr
   20     | expr MODULUS expr
   21     | expr GREATER expr
   22     | expr GREATER_EQUAL expr
   23     | expr LESS expr
   24     | expr LESS_EQUAL expr
   25     | expr EQUAL expr
   26     | expr INEQUAL expr
   27     | expr AND expr
   28     | expr OR expr
   29     | term

   30 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS
   31     | MINUS expr
   32     | NOT expr
   33     | INCREMENT lvalue
   34     | lvalue INCREMENT
   35     | DECREMENT lvalue
   36     | lvalue DECREMENT
   37     | primary

   38 assignexpr: lvalue ASSIGN expr

   39 primary: lvalue
   40        | call
   41        | objectdef
   42        | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS
   43        | const

   44 lvalue: ID
   45       | LOCAL ID
   46       | DOUBLE_COLON DOUBLE_COLON ID
   47       | member

   48 member: lvalue DOT ID
   49       | lvalue LEFT_BRACKETS expr RIGHT_BRACKETS
   50       | call DOT ID
   51       | call LEFT_BRACKETS expr RIGHT_BRACKETS

   52 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   53     | lvalue callsuffix
   54     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   55 callsuffix: normcall
   56           | methodcall

   57 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   58 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   59 elist: expr elists
   60      | %empty

   61 elists: COMMA expr elists
   62       | %empty

   63 objectdef: LEFT_BRACKETS elist RIGHT_BRACKETS
   64          | LEFT_BRACKETS indexed RIGHT_BRACKETS

   65 indexed: indexedelem indexeds

   66 indexeds: COMMA indexed
   67         | %empty

   68 indexedelem: LEFT_BRACES expr COLON expr RIGHT_BRACES

   69 block: LEFT_BRACES stmts RIGHT_BRACES

   70 funcdef: FUNCTION ID LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block
   71        | FUNCTION LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block

   72 const: INTCONST
   73      | STRING
   74      | NIL
   75      | TRUE
   76      | FALSE

   77 idlist: ID ids

   78 ids: COMMA ID ids
   79    | %empty

   80 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt elsestmt

   81 elsestmt: ELSE stmt
   82         | %empty

   83 whilestmt: WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt

   84 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

   85 returnstmt: RETURN expr SEMICOLON
   86           | RETURN SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 44 45 46 48 50 58 70 77 78
INTCONST (259) 72
REALCONST (260)
STRING (261) 73
IF (262) 80
ELSE (263) 81
WHILE (264) 83
FOR (265) 84
FUNCTION (266) 70 71
RETURN (267) 85 86
BREAK (268) 10
CONTINUE (269) 11
AND (270) 27
NOT (271) 32
OR (272) 28
LOCAL (273) 45
TRUE (274) 75
FALSE (275) 76
NIL (276) 74
ASSIGN (277) 38
PLUS (278) 16
MINUS (279) 17 31
MULTIPLIES (280) 18
DIVIDES (281) 19
MODULUS (282) 20
EQUAL (283) 25
INEQUAL (284) 26
INCREMENT (285) 33 34
DECREMENT (286) 35 36
GREATER (287) 21
LESS (288) 23
GREATER_EQUAL (289) 22
LESS_EQUAL (290) 24
LEFT_BRACES (291) 68 69
RIGHT_BRACES (292) 68 69
LEFT_BRACKETS (293) 49 51 63 64
RIGHT_BRACKETS (294) 49 51 63 64
LEFT_PARENTHESIS (295) 30 42 52 54 57 58 70 71 80 83 84
RIGHT_PARENTHESIS (296) 30 42 52 54 57 58 70 71 80 83 84
SEMICOLON (297) 5 10 11 14 84 85 86
COMMA (298) 61 66 78
COLON (299) 68
DOUBLE_COLON (300) 46
DOT (301) 48 50
DOUBLE_DOT (302) 58


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1 2, on right: 0
stmts (50)
    on left: 3 4, on right: 1 3 69
stmt (51)
    on left: 5 6 7 8 9 10 11 12 13 14, on right: 1 3 80 81 83 84
expr (52)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29, on right:
    5 16 17 18 19 20 21 22 23 24 25 26 27 28 30 31 32 38 49 51 59 61
    68 80 83 84 85
term (53)
    on left: 30 31 32 33 34 35 36 37, on right: 29
assignexpr (54)
    on left: 38, on right: 15
primary (55)
    on left: 39 40 41 42 43, on right: 37
lvalue (56)
    on left: 44 45 46 47, on right: 33 34 35 36 38 39 48 49 53
member (57)
    on left: 48 49 50 51, on right: 47
call (58)
    on left: 52 53 54, on right: 40 50 51 52
callsuffix (59)
    on left: 55 56, on right: 53
normcall (60)
    on left: 57, on right: 55
methodcall (61)
    on left: 58, on right: 56
elist (62)
    on left: 59 60, on right: 52 54 57 58 63 84
elists (63)
    on left: 61 62, on right: 59 61
objectdef (64)
    on left: 63 64, on right: 41
indexed (65)
    on left: 65, on right: 64 66
indexeds (66)
    on left: 66 67, on right: 65
indexedelem (67)
    on left: 68, on right: 65
block (68)
    on left: 69, on right: 12 70 71
funcdef (69)
    on left: 70 71, on right: 13 42 54
const (70)
    on left: 72 73 74 75 76, on right: 43
idlist (71)
    on left: 77, on right: 70 71
ids (72)
    on left: 78 79, on right: 77 78
ifstmt (73)
    on left: 80, on right: 6
elsestmt (74)
    on left: 81 82, on right: 80
whilestmt (75)
    on left: 83, on right: 7
forstmt (76)
    on left: 84, on right: 8
returnstmt (77)
    on left: 85 86, on right: 9


State 0

    0 $accept: . program $end

    $end      reduce using rule 2 (program)
    $default  reduce using rule 4 (stmts)

    program  go to state 1
    stmts    go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: stmts . stmt
    3 stmts: stmts . stmt

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    IF                shift, and go to state 7
    WHILE             shift, and go to state 8
    FOR               shift, and go to state 9
    FUNCTION          shift, and go to state 10
    RETURN            shift, and go to state 11
    BREAK             shift, and go to state 12
    CONTINUE          shift, and go to state 13
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACES       shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    SEMICOLON         shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 26

    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 3

    0 $accept: program $end .

    $default  accept


State 4

   44 lvalue: ID .

    $default  reduce using rule 44 (lvalue)


State 5

   72 const: INTCONST .

    $default  reduce using rule 72 (const)


State 6

   73 const: STRING .

    $default  reduce using rule 73 (const)


State 7

   80 ifstmt: IF . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt elsestmt

    LEFT_PARENTHESIS  shift, and go to state 43


State 8

   83 whilestmt: WHILE . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt

    LEFT_PARENTHESIS  shift, and go to state 44


State 9

   84 forstmt: FOR . LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    LEFT_PARENTHESIS  shift, and go to state 45


State 10

   70 funcdef: FUNCTION . ID LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block
   71        | FUNCTION . LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block

    ID                shift, and go to state 46
    LEFT_PARENTHESIS  shift, and go to state 47


State 11

   85 returnstmt: RETURN . expr SEMICOLON
   86           | RETURN . SEMICOLON

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    SEMICOLON         shift, and go to state 48
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 49
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 12

   10 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 13

   11 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 14

   32 term: NOT . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 52
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 15

   45 lvalue: LOCAL . ID

    ID  shift, and go to state 53


State 16

   75 const: TRUE .

    $default  reduce using rule 75 (const)


State 17

   76 const: FALSE .

    $default  reduce using rule 76 (const)


State 18

   74 const: NIL .

    $default  reduce using rule 74 (const)


State 19

   31 term: MINUS . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 54
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 20

   33 term: INCREMENT . lvalue

    ID                shift, and go to state 4
    LOCAL             shift, and go to state 15
    LEFT_PARENTHESIS  shift, and go to state 55
    DOUBLE_COLON      shift, and go to state 26

    lvalue  go to state 56
    member  go to state 33
    call    go to state 57


State 21

   35 term: DECREMENT . lvalue

    ID                shift, and go to state 4
    LOCAL             shift, and go to state 15
    LEFT_PARENTHESIS  shift, and go to state 55
    DOUBLE_COLON      shift, and go to state 26

    lvalue  go to state 58
    member  go to state 33
    call    go to state 57


State 22

   69 block: LEFT_BRACES . stmts RIGHT_BRACES

    $default  reduce using rule 4 (stmts)

    stmts  go to state 59


State 23

   63 objectdef: LEFT_BRACKETS . elist RIGHT_BRACKETS
   64          | LEFT_BRACKETS . indexed RIGHT_BRACKETS

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACES       shift, and go to state 60
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expr         go to state 61
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    member       go to state 33
    call         go to state 34
    elist        go to state 62
    objectdef    go to state 35
    indexed      go to state 63
    indexedelem  go to state 64
    const        go to state 38


State 24

   30 term: LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS
   42 primary: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS
   54 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    FUNCTION          shift, and go to state 10
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 65
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    funcdef     go to state 66
    const       go to state 38


State 25

   14 stmt: SEMICOLON .

    $default  reduce using rule 14 (stmt)


State 26

   46 lvalue: DOUBLE_COLON . DOUBLE_COLON ID

    DOUBLE_COLON  shift, and go to state 67


State 27

    1 program: stmts stmt .
    3 stmts: stmts stmt .

    $end      reduce using rule 1 (program)
    $default  reduce using rule 3 (stmts)


State 28

    5 stmt: expr . SEMICOLON
   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    AND            shift, and go to state 68
    OR             shift, and go to state 69
    PLUS           shift, and go to state 70
    MINUS          shift, and go to state 71
    MULTIPLIES     shift, and go to state 72
    DIVIDES        shift, and go to state 73
    MODULUS        shift, and go to state 74
    EQUAL          shift, and go to state 75
    INEQUAL        shift, and go to state 76
    GREATER        shift, and go to state 77
    LESS           shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    LESS_EQUAL     shift, and go to state 80
    SEMICOLON      shift, and go to state 81


State 29

   29 expr: term .

    $default  reduce using rule 29 (expr)


State 30

   15 expr: assignexpr .

    $default  reduce using rule 15 (expr)


State 31

   37 term: primary .

    $default  reduce using rule 37 (term)


State 32

   34 term: lvalue . INCREMENT
   36     | lvalue . DECREMENT
   38 assignexpr: lvalue . ASSIGN expr
   39 primary: lvalue .
   48 member: lvalue . DOT ID
   49       | lvalue . LEFT_BRACKETS expr RIGHT_BRACKETS
   53 call: lvalue . callsuffix

    ASSIGN            shift, and go to state 82
    INCREMENT         shift, and go to state 83
    DECREMENT         shift, and go to state 84
    LEFT_BRACKETS     shift, and go to state 85
    LEFT_PARENTHESIS  shift, and go to state 86
    DOT               shift, and go to state 87
    DOUBLE_DOT        shift, and go to state 88

    $default  reduce using rule 39 (primary)

    callsuffix  go to state 89
    normcall    go to state 90
    methodcall  go to state 91


State 33

   47 lvalue: member .

    $default  reduce using rule 47 (lvalue)


State 34

   40 primary: call .
   50 member: call . DOT ID
   51       | call . LEFT_BRACKETS expr RIGHT_BRACKETS
   52 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACKETS     shift, and go to state 92
    LEFT_PARENTHESIS  shift, and go to state 93
    DOT               shift, and go to state 94

    $default  reduce using rule 40 (primary)


State 35

   41 primary: objectdef .

    $default  reduce using rule 41 (primary)


State 36

   12 stmt: block .

    $default  reduce using rule 12 (stmt)


State 37

   13 stmt: funcdef .

    $default  reduce using rule 13 (stmt)


State 38

   43 primary: const .

    $default  reduce using rule 43 (primary)


State 39

    6 stmt: ifstmt .

    $default  reduce using rule 6 (stmt)


State 40

    7 stmt: whilestmt .

    $default  reduce using rule 7 (stmt)


State 41

    8 stmt: forstmt .

    $default  reduce using rule 8 (stmt)


State 42

    9 stmt: returnstmt .

    $default  reduce using rule 9 (stmt)


State 43

   80 ifstmt: IF LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS stmt elsestmt

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 95
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 44

   83 whilestmt: WHILE LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS stmt

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 96
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 45

   84 forstmt: FOR LEFT_PARENTHESIS . elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expr        go to state 61
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 97
    objectdef   go to state 35
    const       go to state 38


State 46

   70 funcdef: FUNCTION ID . LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block

    LEFT_PARENTHESIS  shift, and go to state 98


State 47

   71 funcdef: FUNCTION LEFT_PARENTHESIS . idlist RIGHT_PARENTHESIS block

    ID  shift, and go to state 99

    idlist  go to state 100


State 48

   86 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 86 (returnstmt)


State 49

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   85 returnstmt: RETURN expr . SEMICOLON

    AND            shift, and go to state 68
    OR             shift, and go to state 69
    PLUS           shift, and go to state 70
    MINUS          shift, and go to state 71
    MULTIPLIES     shift, and go to state 72
    DIVIDES        shift, and go to state 73
    MODULUS        shift, and go to state 74
    EQUAL          shift, and go to state 75
    INEQUAL        shift, and go to state 76
    GREATER        shift, and go to state 77
    LESS           shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    LESS_EQUAL     shift, and go to state 80
    SEMICOLON      shift, and go to state 101


State 50

   10 stmt: BREAK SEMICOLON .

    $default  reduce using rule 10 (stmt)


State 51

   11 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 11 (stmt)


State 52

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   32 term: NOT expr .

    AND            shift, and go to state 68
    OR             shift, and go to state 69
    PLUS           shift, and go to state 70
    MINUS          shift, and go to state 71
    MULTIPLIES     shift, and go to state 72
    DIVIDES        shift, and go to state 73
    MODULUS        shift, and go to state 74
    EQUAL          shift, and go to state 75
    INEQUAL        shift, and go to state 76
    GREATER        shift, and go to state 77
    LESS           shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    LESS_EQUAL     shift, and go to state 80

    $default  reduce using rule 32 (term)


State 53

   45 lvalue: LOCAL ID .

    $default  reduce using rule 45 (lvalue)


State 54

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   31 term: MINUS expr .

    AND            shift, and go to state 68
    OR             shift, and go to state 69
    EQUAL          shift, and go to state 75
    INEQUAL        shift, and go to state 76
    GREATER        shift, and go to state 77
    LESS           shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    LESS_EQUAL     shift, and go to state 80

    $default  reduce using rule 31 (term)


State 55

   54 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION  shift, and go to state 10

    funcdef  go to state 102


State 56

   33 term: INCREMENT lvalue .
   48 member: lvalue . DOT ID
   49       | lvalue . LEFT_BRACKETS expr RIGHT_BRACKETS
   53 call: lvalue . callsuffix

    LEFT_BRACKETS     shift, and go to state 85
    LEFT_PARENTHESIS  shift, and go to state 86
    DOT               shift, and go to state 87
    DOUBLE_DOT        shift, and go to state 88

    $default  reduce using rule 33 (term)

    callsuffix  go to state 89
    normcall    go to state 90
    methodcall  go to state 91


State 57

   50 member: call . DOT ID
   51       | call . LEFT_BRACKETS expr RIGHT_BRACKETS
   52 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACKETS     shift, and go to state 92
    LEFT_PARENTHESIS  shift, and go to state 93
    DOT               shift, and go to state 94


State 58

   35 term: DECREMENT lvalue .
   48 member: lvalue . DOT ID
   49       | lvalue . LEFT_BRACKETS expr RIGHT_BRACKETS
   53 call: lvalue . callsuffix

    LEFT_BRACKETS     shift, and go to state 85
    LEFT_PARENTHESIS  shift, and go to state 86
    DOT               shift, and go to state 87
    DOUBLE_DOT        shift, and go to state 88

    $default  reduce using rule 35 (term)

    callsuffix  go to state 89
    normcall    go to state 90
    methodcall  go to state 91


State 59

    3 stmts: stmts . stmt
   69 block: LEFT_BRACES stmts . RIGHT_BRACES

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    IF                shift, and go to state 7
    WHILE             shift, and go to state 8
    FOR               shift, and go to state 9
    FUNCTION          shift, and go to state 10
    RETURN            shift, and go to state 11
    BREAK             shift, and go to state 12
    CONTINUE          shift, and go to state 13
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACES       shift, and go to state 22
    RIGHT_BRACES      shift, and go to state 103
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    SEMICOLON         shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 26

    stmt        go to state 104
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 60

   68 indexedelem: LEFT_BRACES . expr COLON expr RIGHT_BRACES

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 105
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 61

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   59 elist: expr . elists

    AND            shift, and go to state 68
    OR             shift, and go to state 69
    PLUS           shift, and go to state 70
    MINUS          shift, and go to state 71
    MULTIPLIES     shift, and go to state 72
    DIVIDES        shift, and go to state 73
    MODULUS        shift, and go to state 74
    EQUAL          shift, and go to state 75
    INEQUAL        shift, and go to state 76
    GREATER        shift, and go to state 77
    LESS           shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    LESS_EQUAL     shift, and go to state 80
    COMMA          shift, and go to state 106

    $default  reduce using rule 62 (elists)

    elists  go to state 107


State 62

   63 objectdef: LEFT_BRACKETS elist . RIGHT_BRACKETS

    RIGHT_BRACKETS  shift, and go to state 108


State 63

   64 objectdef: LEFT_BRACKETS indexed . RIGHT_BRACKETS

    RIGHT_BRACKETS  shift, and go to state 109


State 64

   65 indexed: indexedelem . indexeds

    COMMA  shift, and go to state 110

    $default  reduce using rule 67 (indexeds)

    indexeds  go to state 111


State 65

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   30 term: LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    AND                shift, and go to state 68
    OR                 shift, and go to state 69
    PLUS               shift, and go to state 70
    MINUS              shift, and go to state 71
    MULTIPLIES         shift, and go to state 72
    DIVIDES            shift, and go to state 73
    MODULUS            shift, and go to state 74
    EQUAL              shift, and go to state 75
    INEQUAL            shift, and go to state 76
    GREATER            shift, and go to state 77
    LESS               shift, and go to state 78
    GREATER_EQUAL      shift, and go to state 79
    LESS_EQUAL         shift, and go to state 80
    RIGHT_PARENTHESIS  shift, and go to state 112


State 66

   42 primary: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS
   54 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 113


State 67

   46 lvalue: DOUBLE_COLON DOUBLE_COLON . ID

    ID  shift, and go to state 114


State 68

   27 expr: expr AND . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 115
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 69

   28 expr: expr OR . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 116
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 70

   16 expr: expr PLUS . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 117
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 71

   17 expr: expr MINUS . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 118
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 72

   18 expr: expr MULTIPLIES . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 119
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 73

   19 expr: expr DIVIDES . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 120
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 74

   20 expr: expr MODULUS . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 121
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 75

   25 expr: expr EQUAL . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 122
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 76

   26 expr: expr INEQUAL . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 123
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 77

   21 expr: expr GREATER . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 124
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 78

   23 expr: expr LESS . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 125
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 79

   22 expr: expr GREATER_EQUAL . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 126
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 80

   24 expr: expr LESS_EQUAL . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 127
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 81

    5 stmt: expr SEMICOLON .

    $default  reduce using rule 5 (stmt)


State 82

   38 assignexpr: lvalue ASSIGN . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 128
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 83

   34 term: lvalue INCREMENT .

    $default  reduce using rule 34 (term)


State 84

   36 term: lvalue DECREMENT .

    $default  reduce using rule 36 (term)


State 85

   49 member: lvalue LEFT_BRACKETS . expr RIGHT_BRACKETS

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 129
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 86

   57 normcall: LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expr        go to state 61
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 130
    objectdef   go to state 35
    const       go to state 38


State 87

   48 member: lvalue DOT . ID

    ID  shift, and go to state 131


State 88

   58 methodcall: DOUBLE_DOT . ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    ID  shift, and go to state 132


State 89

   53 call: lvalue callsuffix .

    $default  reduce using rule 53 (call)


State 90

   55 callsuffix: normcall .

    $default  reduce using rule 55 (callsuffix)


State 91

   56 callsuffix: methodcall .

    $default  reduce using rule 56 (callsuffix)


State 92

   51 member: call LEFT_BRACKETS . expr RIGHT_BRACKETS

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 133
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 93

   52 call: call LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expr        go to state 61
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 134
    objectdef   go to state 35
    const       go to state 38


State 94

   50 member: call DOT . ID

    ID  shift, and go to state 135


State 95

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   80 ifstmt: IF LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS stmt elsestmt

    AND                shift, and go to state 68
    OR                 shift, and go to state 69
    PLUS               shift, and go to state 70
    MINUS              shift, and go to state 71
    MULTIPLIES         shift, and go to state 72
    DIVIDES            shift, and go to state 73
    MODULUS            shift, and go to state 74
    EQUAL              shift, and go to state 75
    INEQUAL            shift, and go to state 76
    GREATER            shift, and go to state 77
    LESS               shift, and go to state 78
    GREATER_EQUAL      shift, and go to state 79
    LESS_EQUAL         shift, and go to state 80
    RIGHT_PARENTHESIS  shift, and go to state 136


State 96

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   83 whilestmt: WHILE LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS stmt

    AND                shift, and go to state 68
    OR                 shift, and go to state 69
    PLUS               shift, and go to state 70
    MINUS              shift, and go to state 71
    MULTIPLIES         shift, and go to state 72
    DIVIDES            shift, and go to state 73
    MODULUS            shift, and go to state 74
    EQUAL              shift, and go to state 75
    INEQUAL            shift, and go to state 76
    GREATER            shift, and go to state 77
    LESS               shift, and go to state 78
    GREATER_EQUAL      shift, and go to state 79
    LESS_EQUAL         shift, and go to state 80
    RIGHT_PARENTHESIS  shift, and go to state 137


State 97

   84 forstmt: FOR LEFT_PARENTHESIS elist . SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    SEMICOLON  shift, and go to state 138


State 98

   70 funcdef: FUNCTION ID LEFT_PARENTHESIS . idlist RIGHT_PARENTHESIS block

    ID  shift, and go to state 99

    idlist  go to state 139


State 99

   77 idlist: ID . ids

    COMMA  shift, and go to state 140

    $default  reduce using rule 79 (ids)

    ids  go to state 141


State 100

   71 funcdef: FUNCTION LEFT_PARENTHESIS idlist . RIGHT_PARENTHESIS block

    RIGHT_PARENTHESIS  shift, and go to state 142


State 101

   85 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 85 (returnstmt)


State 102

   54 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 143


State 103

   69 block: LEFT_BRACES stmts RIGHT_BRACES .

    $default  reduce using rule 69 (block)


State 104

    3 stmts: stmts stmt .

    $default  reduce using rule 3 (stmts)


State 105

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   68 indexedelem: LEFT_BRACES expr . COLON expr RIGHT_BRACES

    AND            shift, and go to state 68
    OR             shift, and go to state 69
    PLUS           shift, and go to state 70
    MINUS          shift, and go to state 71
    MULTIPLIES     shift, and go to state 72
    DIVIDES        shift, and go to state 73
    MODULUS        shift, and go to state 74
    EQUAL          shift, and go to state 75
    INEQUAL        shift, and go to state 76
    GREATER        shift, and go to state 77
    LESS           shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    LESS_EQUAL     shift, and go to state 80
    COLON          shift, and go to state 144


State 106

   61 elists: COMMA . expr elists

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 145
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 107

   59 elist: expr elists .

    $default  reduce using rule 59 (elist)


State 108

   63 objectdef: LEFT_BRACKETS elist RIGHT_BRACKETS .

    $default  reduce using rule 63 (objectdef)


State 109

   64 objectdef: LEFT_BRACKETS indexed RIGHT_BRACKETS .

    $default  reduce using rule 64 (objectdef)


State 110

   66 indexeds: COMMA . indexed

    LEFT_BRACES  shift, and go to state 60

    indexed      go to state 146
    indexedelem  go to state 64


State 111

   65 indexed: indexedelem indexeds .

    $default  reduce using rule 65 (indexed)


State 112

   30 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 30 (term)


State 113

   42 primary: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS .
   54 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 147

    $default  reduce using rule 42 (primary)


State 114

   46 lvalue: DOUBLE_COLON DOUBLE_COLON ID .

    $default  reduce using rule 46 (lvalue)


State 115

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   27     | expr AND expr .
   28     | expr . OR expr

    OR  shift, and go to state 69

    $default  reduce using rule 27 (expr)


State 116

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   28     | expr OR expr .

    $default  reduce using rule 28 (expr)


State 117

   16 expr: expr . PLUS expr
   16     | expr PLUS expr .
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    AND            shift, and go to state 68
    OR             shift, and go to state 69
    EQUAL          shift, and go to state 75
    INEQUAL        shift, and go to state 76
    GREATER        shift, and go to state 77
    LESS           shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    LESS_EQUAL     shift, and go to state 80

    $default  reduce using rule 16 (expr)


State 118

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   17     | expr MINUS expr .
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    AND            shift, and go to state 68
    OR             shift, and go to state 69
    EQUAL          shift, and go to state 75
    INEQUAL        shift, and go to state 76
    GREATER        shift, and go to state 77
    LESS           shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    LESS_EQUAL     shift, and go to state 80

    $default  reduce using rule 17 (expr)


State 119

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   18     | expr MULTIPLIES expr .
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    AND            shift, and go to state 68
    OR             shift, and go to state 69
    PLUS           shift, and go to state 70
    MINUS          shift, and go to state 71
    EQUAL          shift, and go to state 75
    INEQUAL        shift, and go to state 76
    GREATER        shift, and go to state 77
    LESS           shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    LESS_EQUAL     shift, and go to state 80

    $default  reduce using rule 18 (expr)


State 120

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   19     | expr DIVIDES expr .
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    AND            shift, and go to state 68
    OR             shift, and go to state 69
    PLUS           shift, and go to state 70
    MINUS          shift, and go to state 71
    EQUAL          shift, and go to state 75
    INEQUAL        shift, and go to state 76
    GREATER        shift, and go to state 77
    LESS           shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    LESS_EQUAL     shift, and go to state 80

    $default  reduce using rule 19 (expr)


State 121

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   20     | expr MODULUS expr .
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    AND            shift, and go to state 68
    OR             shift, and go to state 69
    PLUS           shift, and go to state 70
    MINUS          shift, and go to state 71
    EQUAL          shift, and go to state 75
    INEQUAL        shift, and go to state 76
    GREATER        shift, and go to state 77
    LESS           shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    LESS_EQUAL     shift, and go to state 80

    $default  reduce using rule 20 (expr)


State 122

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   25     | expr EQUAL expr .
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    AND  shift, and go to state 68
    OR   shift, and go to state 69

    EQUAL    error (nonassociative)
    INEQUAL  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 123

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   26     | expr INEQUAL expr .
   27     | expr . AND expr
   28     | expr . OR expr

    AND  shift, and go to state 68
    OR   shift, and go to state 69

    EQUAL    error (nonassociative)
    INEQUAL  error (nonassociative)

    $default  reduce using rule 26 (expr)


State 124

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   21     | expr GREATER expr .
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    AND      shift, and go to state 68
    OR       shift, and go to state 69
    EQUAL    shift, and go to state 75
    INEQUAL  shift, and go to state 76

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 21 (expr)


State 125

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   23     | expr LESS expr .
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    AND      shift, and go to state 68
    OR       shift, and go to state 69
    EQUAL    shift, and go to state 75
    INEQUAL  shift, and go to state 76

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 23 (expr)


State 126

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   22     | expr GREATER_EQUAL expr .
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    AND      shift, and go to state 68
    OR       shift, and go to state 69
    EQUAL    shift, and go to state 75
    INEQUAL  shift, and go to state 76

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 22 (expr)


State 127

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   24     | expr LESS_EQUAL expr .
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    AND      shift, and go to state 68
    OR       shift, and go to state 69
    EQUAL    shift, and go to state 75
    INEQUAL  shift, and go to state 76

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 24 (expr)


State 128

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   38 assignexpr: lvalue ASSIGN expr .

    $default  reduce using rule 38 (assignexpr)


State 129

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   49 member: lvalue LEFT_BRACKETS expr . RIGHT_BRACKETS

    AND             shift, and go to state 68
    OR              shift, and go to state 69
    PLUS            shift, and go to state 70
    MINUS           shift, and go to state 71
    MULTIPLIES      shift, and go to state 72
    DIVIDES         shift, and go to state 73
    MODULUS         shift, and go to state 74
    EQUAL           shift, and go to state 75
    INEQUAL         shift, and go to state 76
    GREATER         shift, and go to state 77
    LESS            shift, and go to state 78
    GREATER_EQUAL   shift, and go to state 79
    LESS_EQUAL      shift, and go to state 80
    RIGHT_BRACKETS  shift, and go to state 148


State 130

   57 normcall: LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 149


State 131

   48 member: lvalue DOT ID .

    $default  reduce using rule 48 (member)


State 132

   58 methodcall: DOUBLE_DOT ID . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 150


State 133

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   51 member: call LEFT_BRACKETS expr . RIGHT_BRACKETS

    AND             shift, and go to state 68
    OR              shift, and go to state 69
    PLUS            shift, and go to state 70
    MINUS           shift, and go to state 71
    MULTIPLIES      shift, and go to state 72
    DIVIDES         shift, and go to state 73
    MODULUS         shift, and go to state 74
    EQUAL           shift, and go to state 75
    INEQUAL         shift, and go to state 76
    GREATER         shift, and go to state 77
    LESS            shift, and go to state 78
    GREATER_EQUAL   shift, and go to state 79
    LESS_EQUAL      shift, and go to state 80
    RIGHT_BRACKETS  shift, and go to state 151


State 134

   52 call: call LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 152


State 135

   50 member: call DOT ID .

    $default  reduce using rule 50 (member)


State 136

   80 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS . stmt elsestmt

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    IF                shift, and go to state 7
    WHILE             shift, and go to state 8
    FOR               shift, and go to state 9
    FUNCTION          shift, and go to state 10
    RETURN            shift, and go to state 11
    BREAK             shift, and go to state 12
    CONTINUE          shift, and go to state 13
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACES       shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    SEMICOLON         shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 26

    stmt        go to state 153
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 137

   83 whilestmt: WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS . stmt

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    IF                shift, and go to state 7
    WHILE             shift, and go to state 8
    FOR               shift, and go to state 9
    FUNCTION          shift, and go to state 10
    RETURN            shift, and go to state 11
    BREAK             shift, and go to state 12
    CONTINUE          shift, and go to state 13
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACES       shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    SEMICOLON         shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 26

    stmt        go to state 154
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 138

   84 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON . expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 155
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 139

   70 funcdef: FUNCTION ID LEFT_PARENTHESIS idlist . RIGHT_PARENTHESIS block

    RIGHT_PARENTHESIS  shift, and go to state 156


State 140

   78 ids: COMMA . ID ids

    ID  shift, and go to state 157


State 141

   77 idlist: ID ids .

    $default  reduce using rule 77 (idlist)


State 142

   71 funcdef: FUNCTION LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS . block

    LEFT_BRACES  shift, and go to state 22

    block  go to state 158


State 143

   54 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 147


State 144

   68 indexedelem: LEFT_BRACES expr COLON . expr RIGHT_BRACES

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 159
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 145

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   61 elists: COMMA expr . elists

    AND            shift, and go to state 68
    OR             shift, and go to state 69
    PLUS           shift, and go to state 70
    MINUS          shift, and go to state 71
    MULTIPLIES     shift, and go to state 72
    DIVIDES        shift, and go to state 73
    MODULUS        shift, and go to state 74
    EQUAL          shift, and go to state 75
    INEQUAL        shift, and go to state 76
    GREATER        shift, and go to state 77
    LESS           shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    LESS_EQUAL     shift, and go to state 80
    COMMA          shift, and go to state 106

    $default  reduce using rule 62 (elists)

    elists  go to state 160


State 146

   66 indexeds: COMMA indexed .

    $default  reduce using rule 66 (indexeds)


State 147

   54 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expr        go to state 61
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 161
    objectdef   go to state 35
    const       go to state 38


State 148

   49 member: lvalue LEFT_BRACKETS expr RIGHT_BRACKETS .

    $default  reduce using rule 49 (member)


State 149

   57 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 57 (normcall)


State 150

   58 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expr        go to state 61
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 162
    objectdef   go to state 35
    const       go to state 38


State 151

   51 member: call LEFT_BRACKETS expr RIGHT_BRACKETS .

    $default  reduce using rule 51 (member)


State 152

   52 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 52 (call)


State 153

   80 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt . elsestmt

    ELSE  shift, and go to state 163

    ELSE      [reduce using rule 82 (elsestmt)]
    $default  reduce using rule 82 (elsestmt)

    elsestmt  go to state 164


State 154

   83 whilestmt: WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt .

    $default  reduce using rule 83 (whilestmt)


State 155

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   84 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr . SEMICOLON elist RIGHT_PARENTHESIS stmt

    AND            shift, and go to state 68
    OR             shift, and go to state 69
    PLUS           shift, and go to state 70
    MINUS          shift, and go to state 71
    MULTIPLIES     shift, and go to state 72
    DIVIDES        shift, and go to state 73
    MODULUS        shift, and go to state 74
    EQUAL          shift, and go to state 75
    INEQUAL        shift, and go to state 76
    GREATER        shift, and go to state 77
    LESS           shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    LESS_EQUAL     shift, and go to state 80
    SEMICOLON      shift, and go to state 165


State 156

   70 funcdef: FUNCTION ID LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS . block

    LEFT_BRACES  shift, and go to state 22

    block  go to state 166


State 157

   78 ids: COMMA ID . ids

    COMMA  shift, and go to state 140

    $default  reduce using rule 79 (ids)

    ids  go to state 167


State 158

   71 funcdef: FUNCTION LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block .

    $default  reduce using rule 71 (funcdef)


State 159

   16 expr: expr . PLUS expr
   17     | expr . MINUS expr
   18     | expr . MULTIPLIES expr
   19     | expr . DIVIDES expr
   20     | expr . MODULUS expr
   21     | expr . GREATER expr
   22     | expr . GREATER_EQUAL expr
   23     | expr . LESS expr
   24     | expr . LESS_EQUAL expr
   25     | expr . EQUAL expr
   26     | expr . INEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   68 indexedelem: LEFT_BRACES expr COLON expr . RIGHT_BRACES

    AND            shift, and go to state 68
    OR             shift, and go to state 69
    PLUS           shift, and go to state 70
    MINUS          shift, and go to state 71
    MULTIPLIES     shift, and go to state 72
    DIVIDES        shift, and go to state 73
    MODULUS        shift, and go to state 74
    EQUAL          shift, and go to state 75
    INEQUAL        shift, and go to state 76
    GREATER        shift, and go to state 77
    LESS           shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    LESS_EQUAL     shift, and go to state 80
    RIGHT_BRACES   shift, and go to state 168


State 160

   61 elists: COMMA expr elists .

    $default  reduce using rule 61 (elists)


State 161

   54 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 169


State 162

   58 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 170


State 163

   81 elsestmt: ELSE . stmt

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    IF                shift, and go to state 7
    WHILE             shift, and go to state 8
    FOR               shift, and go to state 9
    FUNCTION          shift, and go to state 10
    RETURN            shift, and go to state 11
    BREAK             shift, and go to state 12
    CONTINUE          shift, and go to state 13
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACES       shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    SEMICOLON         shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 26

    stmt        go to state 171
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 164

   80 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt elsestmt .

    $default  reduce using rule 80 (ifstmt)


State 165

   84 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON . elist RIGHT_PARENTHESIS stmt

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expr        go to state 61
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 172
    objectdef   go to state 35
    const       go to state 38


State 166

   70 funcdef: FUNCTION ID LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block .

    $default  reduce using rule 70 (funcdef)


State 167

   78 ids: COMMA ID ids .

    $default  reduce using rule 78 (ids)


State 168

   68 indexedelem: LEFT_BRACES expr COLON expr RIGHT_BRACES .

    $default  reduce using rule 68 (indexedelem)


State 169

   54 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 54 (call)


State 170

   58 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 58 (methodcall)


State 171

   81 elsestmt: ELSE stmt .

    $default  reduce using rule 81 (elsestmt)


State 172

   84 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist . RIGHT_PARENTHESIS stmt

    RIGHT_PARENTHESIS  shift, and go to state 173


State 173

   84 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS . stmt

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    IF                shift, and go to state 7
    WHILE             shift, and go to state 8
    FOR               shift, and go to state 9
    FUNCTION          shift, and go to state 10
    RETURN            shift, and go to state 11
    BREAK             shift, and go to state 12
    CONTINUE          shift, and go to state 13
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACES       shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    SEMICOLON         shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 26

    stmt        go to state 174
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 174

   84 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt .

    $default  reduce using rule 84 (forstmt)
