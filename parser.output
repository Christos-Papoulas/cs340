State 103 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmts

    2 stmts: stmts stmt
    3      | %empty

    4 stmt: expr SEMICOLON
    5     | ifstmt
    6     | whilestmt
    7     | forstmt
    8     | returnstmt
    9     | breakstmt
   10     | continuestmt
   11     | block
   12     | funcdef
   13     | SEMICOLON

   14 breakstmt: BREAK SEMICOLON

   15 continuestmt: CONTINUE SEMICOLON

   16 expr: assignexpr
   17     | expr PLUS expr
   18     | expr MINUS expr
   19     | expr MULTIPLIES expr
   20     | expr DIVIDES expr
   21     | expr MODULUS expr
   22     | expr GREATER expr
   23     | expr GREATER_EQUAL expr
   24     | expr LESS expr
   25     | expr LESS_EQUAL expr
   26     | expr EQUAL expr
   27     | expr INEQUAL expr
   28     | expr AND M expr
   29     | expr OR M expr
   30     | term

   31 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS
   32     | MINUS expr
   33     | NOT expr
   34     | INCREMENT lvalue
   35     | lvalue INCREMENT
   36     | DECREMENT lvalue
   37     | lvalue DECREMENT
   38     | primary

   39 assignexpr: lvalue ASSIGN expr

   40 primary: lvalue
   41        | call
   42        | objectdef
   43        | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS
   44        | const

   45 lvalue: ID
   46       | LOCAL ID
   47       | DOUBLE_COLON ID
   48       | member

   49 member: lvalue DOT ID
   50       | lvalue LEFT_BRACKETS expr RIGHT_BRACKETS
   51       | call DOT ID
   52       | call LEFT_BRACKETS expr RIGHT_BRACKETS

   53 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   54     | lvalue callsuffix
   55     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   56 callsuffix: normcall
   57           | methodcall

   58 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   59 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   60 elist: expr elists
   61      | %empty

   62 elists: COMMA expr elists
   63       | %empty

   64 objectdef: LEFT_BRACKETS elist RIGHT_BRACKETS
   65          | LEFT_BRACKETS indexed RIGHT_BRACKETS

   66 indexed: indexedelem indexeds

   67 indexeds: COMMA indexed
   68         | %empty

   69 $@1: %empty

   70 indexedelem: LEFT_BRACES expr $@1 COLON expr RIGHT_BRACES

   71 $@2: %empty

   72 block: LEFT_BRACES $@2 stmts RIGHT_BRACES

   73 funcdef: funcprefix funcargs funcbody

   74 $@3: %empty

   75 funcargs: LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS

   76 funcbody: funcblock

   77 funcprefix: FUNCTION funcname

   78 funcname: ID
   79         | %empty

   80 $@4: %empty

<<<<<<< HEAD
   81 const: INTCONST
   82      | REALCONST
   83      | STRING
   84      | NIL
   85      | TRUE
   86      | FALSE

   87 $@4: %empty

   88 idlist: ID $@4 ids
   89       | %empty

   90 $@5: %empty

   91 ids: COMMA ID $@5 ids
   92    | %empty

   93 ifstmt: ifprefix stmt
   94       | ifprefix stmt elseprefix stmt

   95 elseprefix: ELSE

   96 ifprefix: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

   97 whilestmt: whilestart whilecond loopstmt

   98 whilestart: WHILE

   99 whilecond: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

  100 loopstmt: loopstart stmt loopend

  101 loopstart: %empty

  102 loopend: %empty

  103 forstmt: forprefix N elist RIGHT_PARENTHESIS N loopstmt N

  104 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON M expr SEMICOLON

  105 M: %empty

  106 N: %empty

=======
   81 funcblock: LEFT_BRACES $@4 stmts RIGHT_BRACES

   82 const: INTCONST
   83      | STRING
   84      | NIL
   85      | TRUE
   86      | FALSE

   87 $@5: %empty

   88 idlist: ID $@5 ids
   89       | %empty

   90 $@6: %empty

   91 ids: COMMA ID $@6 ids
   92    | %empty

   93 ifstmt: ifprefix stmt
   94       | ifprefix stmt elseprefix stmt

   95 elseprefix: ELSE

   96 ifprefix: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

   97 whilestmt: whilestart whilecond loopstmt

   98 whilestart: WHILE

   99 whilecond: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

  100 loopstmt: loopstart stmt loopend

  101 loopstart: %empty

  102 loopend: %empty

  103 forstmt: forprefix N elist RIGHT_PARENTHESIS N loopstmt N

  104 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON M expr SEMICOLON

  105 M: %empty

  106 N: %empty

>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d
  107 returnstmt: RETURN expr SEMICOLON
  108           | RETURN SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
<<<<<<< HEAD
ID (258) 45 46 47 49 51 59 77 88 91
INTCONST (259) 81
REALCONST (260) 82
=======
ID (258) 45 46 47 49 51 59 78 88 91
INTCONST (259) 82
REALCONST (260)
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d
STRING (261) 83
IF (262) 96
ELSE (263) 95
WHILE (264) 98
FOR (265) 104
<<<<<<< HEAD
FUNCTION (266) 76
=======
FUNCTION (266) 77
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d
RETURN (267) 107 108
BREAK (268) 14
CONTINUE (269) 15
AND (270) 28
NOT (271) 33
OR (272) 29
LOCAL (273) 46
TRUE (274) 85
FALSE (275) 86
NIL (276) 84
ASSIGN (277) 39
PLUS (278) 17
MINUS (279) 18 32
MULTIPLIES (280) 19
DIVIDES (281) 20
MODULUS (282) 21
EQUAL (283) 26
INEQUAL (284) 27
INCREMENT (285) 34 35
DECREMENT (286) 36 37
GREATER (287) 22
LESS (288) 24
GREATER_EQUAL (289) 23
LESS_EQUAL (290) 25
LEFT_BRACES (291) 70 72 81
RIGHT_BRACES (292) 70 72 81
LEFT_BRACKETS (293) 50 52 64 65
RIGHT_BRACKETS (294) 50 52 64 65
<<<<<<< HEAD
LEFT_PARENTHESIS (295) 31 43 53 55 58 59 74 96 99 104
RIGHT_PARENTHESIS (296) 31 43 53 55 58 59 74 96 99 103
SEMICOLON (297) 4 13 14 15 104 107 108
COMMA (298) 62 67 91
COLON (299) 69
=======
LEFT_PARENTHESIS (295) 31 43 53 55 58 59 75 96 99 104
RIGHT_PARENTHESIS (296) 31 43 53 55 58 59 75 96 99 103
SEMICOLON (297) 4 13 14 15 104 107 108
COMMA (298) 62 67 91
COLON (299) 70
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d
DOUBLE_COLON (300) 47
DOT (301) 49 51
DOUBLE_DOT (302) 59


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
stmts (50)
    on left: 2 3, on right: 1 2 72 81
stmt (51)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 2 93 94 100
breakstmt (52)
    on left: 14, on right: 9
continuestmt (53)
    on left: 15, on right: 10
expr (54)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30, on right:
    4 17 18 19 20 21 22 23 24 25 26 27 28 29 31 32 33 39 50 52 60 62
<<<<<<< HEAD
    69 96 99 104 107
=======
    70 96 99 104 107
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d
term (55)
    on left: 31 32 33 34 35 36 37 38, on right: 30
assignexpr (56)
    on left: 39, on right: 16
primary (57)
    on left: 40 41 42 43 44, on right: 38
lvalue (58)
    on left: 45 46 47 48, on right: 34 35 36 37 39 40 49 50 54
member (59)
    on left: 49 50 51 52, on right: 48
call (60)
    on left: 53 54 55, on right: 41 51 52 53
callsuffix (61)
    on left: 56 57, on right: 54
normcall (62)
    on left: 58, on right: 56
methodcall (63)
    on left: 59, on right: 57
elist (64)
    on left: 60 61, on right: 53 55 58 59 64 103 104
elists (65)
    on left: 62 63, on right: 60 62
objectdef (66)
    on left: 64 65, on right: 42
indexed (67)
    on left: 66, on right: 65 67
indexeds (68)
    on left: 67 68, on right: 66
indexedelem (69)
<<<<<<< HEAD
    on left: 69, on right: 66
block (70)
    on left: 71, on right: 11
$@1 (71)
    on left: 70, on right: 71
funcdef (72)
    on left: 72, on right: 12 43 55
funcargs (73)
    on left: 74, on right: 72
$@2 (74)
    on left: 73, on right: 74
funcbody (75)
    on left: 75, on right: 72
funcprefix (76)
    on left: 76, on right: 72
funcname (77)
    on left: 77 78, on right: 76
funcblock (78)
    on left: 80, on right: 75
$@3 (79)
    on left: 79, on right: 80
const (80)
    on left: 81 82 83 84 85 86, on right: 44
idlist (81)
    on left: 88 89, on right: 74
$@4 (82)
    on left: 87, on right: 88
ids (83)
    on left: 91 92, on right: 88 91
$@5 (84)
    on left: 90, on right: 91
ifstmt (85)
    on left: 93 94, on right: 5
elseprefix (86)
    on left: 95, on right: 94
ifprefix (87)
    on left: 96, on right: 93 94
whilestmt (88)
    on left: 97, on right: 6
whilestart (89)
    on left: 98, on right: 97
whilecond (90)
    on left: 99, on right: 97
loopstmt (91)
    on left: 100, on right: 97 103
loopstart (92)
    on left: 101, on right: 100
loopend (93)
    on left: 102, on right: 100
forstmt (94)
    on left: 103, on right: 7
forprefix (95)
    on left: 104, on right: 103
M (96)
    on left: 105, on right: 104
N (97)
    on left: 106, on right: 103
returnstmt (98)
=======
    on left: 70, on right: 66
$@1 (70)
    on left: 69, on right: 70
block (71)
    on left: 72, on right: 11
$@2 (72)
    on left: 71, on right: 72
funcdef (73)
    on left: 73, on right: 12 43 55
funcargs (74)
    on left: 75, on right: 73
$@3 (75)
    on left: 74, on right: 75
funcbody (76)
    on left: 76, on right: 73
funcprefix (77)
    on left: 77, on right: 73
funcname (78)
    on left: 78 79, on right: 77
funcblock (79)
    on left: 81, on right: 76
$@4 (80)
    on left: 80, on right: 81
const (81)
    on left: 82 83 84 85 86, on right: 44
idlist (82)
    on left: 88 89, on right: 75
$@5 (83)
    on left: 87, on right: 88
ids (84)
    on left: 91 92, on right: 88 91
$@6 (85)
    on left: 90, on right: 91
ifstmt (86)
    on left: 93 94, on right: 5
elseprefix (87)
    on left: 95, on right: 94
ifprefix (88)
    on left: 96, on right: 93 94
whilestmt (89)
    on left: 97, on right: 6
whilestart (90)
    on left: 98, on right: 97
whilecond (91)
    on left: 99, on right: 97
loopstmt (92)
    on left: 100, on right: 97 103
loopstart (93)
    on left: 101, on right: 100
loopend (94)
    on left: 102, on right: 100
forstmt (95)
    on left: 103, on right: 7
forprefix (96)
    on left: 104, on right: 103
M (97)
    on left: 105, on right: 28 29 104
N (98)
    on left: 106, on right: 103
returnstmt (99)
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d
    on left: 107 108, on right: 8


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (stmts)

    program  go to state 1
    stmts    go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: stmts .
    2 stmts: stmts . stmt

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    IF                shift, and go to state 8
    WHILE             shift, and go to state 9
    FOR               shift, and go to state 10
    FUNCTION          shift, and go to state 11
    RETURN            shift, and go to state 12
    BREAK             shift, and go to state 13
    CONTINUE          shift, and go to state 14
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACES       shift, and go to state 23
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    SEMICOLON         shift, and go to state 26
    DOUBLE_COLON      shift, and go to state 27

    $default  reduce using rule 1 (program)

    stmt          go to state 28
    breakstmt     go to state 29
    continuestmt  go to state 30
    expr          go to state 31
    term          go to state 32
    assignexpr    go to state 33
    primary       go to state 34
    lvalue        go to state 35
    member        go to state 36
    call          go to state 37
    objectdef     go to state 38
    block         go to state 39
    funcdef       go to state 40
    funcprefix    go to state 41
    const         go to state 42
    ifstmt        go to state 43
    ifprefix      go to state 44
    whilestmt     go to state 45
    whilestart    go to state 46
    forstmt       go to state 47
    forprefix     go to state 48
    returnstmt    go to state 49


State 3

    0 $accept: program $end .

    $default  accept


State 4

   45 lvalue: ID .

    $default  reduce using rule 45 (lvalue)


State 5

   82 const: INTCONST .

    $default  reduce using rule 82 (const)


State 6

<<<<<<< HEAD
   82 const: REALCONST .
=======
   83 const: STRING .
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

    $default  reduce using rule 83 (const)


State 7

<<<<<<< HEAD
   83 const: STRING .
=======
   96 ifprefix: IF . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

    $default  reduce using rule 83 (const)


State 8

<<<<<<< HEAD
   96 ifprefix: IF . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 50
=======
   98 whilestart: WHILE .

    $default  reduce using rule 98 (whilestart)
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d


State 9

<<<<<<< HEAD
   98 whilestart: WHILE .
=======
  104 forprefix: FOR . LEFT_PARENTHESIS elist SEMICOLON M expr SEMICOLON
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

    $default  reduce using rule 98 (whilestart)


State 10

<<<<<<< HEAD
  104 forprefix: FOR . LEFT_PARENTHESIS elist SEMICOLON M expr SEMICOLON
=======
   77 funcprefix: FUNCTION . funcname
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

    LEFT_PARENTHESIS  shift, and go to state 51

<<<<<<< HEAD
=======
    $default  reduce using rule 79 (funcname)
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

State 11

   76 funcprefix: FUNCTION . funcname

    ID  shift, and go to state 52

<<<<<<< HEAD
    $default  reduce using rule 78 (funcname)
=======
  107 returnstmt: RETURN . expr SEMICOLON
  108           | RETURN . SEMICOLON
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

    funcname  go to state 53


State 12

  107 returnstmt: RETURN . expr SEMICOLON
  108           | RETURN . SEMICOLON

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    SEMICOLON         shift, and go to state 54
    DOUBLE_COLON      shift, and go to state 27

    expr        go to state 55
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 13

   14 breakstmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 56


State 14

   15 continuestmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 57


State 15

   33 term: NOT . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    expr        go to state 58
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 16

<<<<<<< HEAD
   46 lvalue: LOCAL . ID

    ID  shift, and go to state 59
=======
   85 const: TRUE .

    $default  reduce using rule 85 (const)
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d


State 17

<<<<<<< HEAD
   85 const: TRUE .
=======
   86 const: FALSE .
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

    $default  reduce using rule 86 (const)


State 18

<<<<<<< HEAD
   86 const: FALSE .

    $default  reduce using rule 86 (const)
=======
   84 const: NIL .

    $default  reduce using rule 84 (const)
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d


State 19

   84 const: NIL .

    $default  reduce using rule 84 (const)


State 20

   32 term: MINUS . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    expr        go to state 60
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 21

   34 term: INCREMENT . lvalue

    ID                shift, and go to state 4
    LOCAL             shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 61
    DOUBLE_COLON      shift, and go to state 27

    lvalue  go to state 62
    member  go to state 36
    call    go to state 63


State 22

   36 term: DECREMENT . lvalue

    ID                shift, and go to state 4
    LOCAL             shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 61
    DOUBLE_COLON      shift, and go to state 27

    lvalue  go to state 64
    member  go to state 36
    call    go to state 63


State 23

   72 block: LEFT_BRACES . $@2 stmts RIGHT_BRACES

    $default  reduce using rule 71 ($@2)

<<<<<<< HEAD
    $@1  go to state 65
=======
    $@2  go to state 64
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d


State 24

   64 objectdef: LEFT_BRACKETS . elist RIGHT_BRACKETS
   65          | LEFT_BRACKETS . indexed RIGHT_BRACKETS

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACES       shift, and go to state 66
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    $default  reduce using rule 61 (elist)

    expr         go to state 67
    term         go to state 32
    assignexpr   go to state 33
    primary      go to state 34
    lvalue       go to state 35
    member       go to state 36
    call         go to state 37
    elist        go to state 68
    objectdef    go to state 38
    indexed      go to state 69
    indexedelem  go to state 70
    const        go to state 42


State 25

   31 term: LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS
   43 primary: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS
   55 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    FUNCTION          shift, and go to state 11
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    expr        go to state 71
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    funcdef     go to state 72
    funcprefix  go to state 41
    const       go to state 42


State 26

   13 stmt: SEMICOLON .

    $default  reduce using rule 13 (stmt)


State 27

   47 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 73


State 28

    2 stmts: stmts stmt .

    $default  reduce using rule 2 (stmts)


State 29

    9 stmt: breakstmt .

    $default  reduce using rule 9 (stmt)


State 30

   10 stmt: continuestmt .

    $default  reduce using rule 10 (stmt)


State 31

    4 stmt: expr . SEMICOLON
   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
   28     | expr . AND M expr
   29     | expr . OR M expr

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MULTIPLIES     shift, and go to state 78
    DIVIDES        shift, and go to state 79
    MODULUS        shift, and go to state 80
    EQUAL          shift, and go to state 81
    INEQUAL        shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    SEMICOLON      shift, and go to state 87


State 32

   30 expr: term .

    $default  reduce using rule 30 (expr)


State 33

   16 expr: assignexpr .

    $default  reduce using rule 16 (expr)


State 34

   38 term: primary .

    $default  reduce using rule 38 (term)


State 35

   35 term: lvalue . INCREMENT
   37     | lvalue . DECREMENT
   39 assignexpr: lvalue . ASSIGN expr
   40 primary: lvalue .
   49 member: lvalue . DOT ID
   50       | lvalue . LEFT_BRACKETS expr RIGHT_BRACKETS
   54 call: lvalue . callsuffix

    ASSIGN            shift, and go to state 88
    INCREMENT         shift, and go to state 89
    DECREMENT         shift, and go to state 90
    LEFT_BRACKETS     shift, and go to state 91
    LEFT_PARENTHESIS  shift, and go to state 92
    DOT               shift, and go to state 93
    DOUBLE_DOT        shift, and go to state 94

    $default  reduce using rule 40 (primary)

    callsuffix  go to state 95
    normcall    go to state 96
    methodcall  go to state 97


State 36

   48 lvalue: member .

    $default  reduce using rule 48 (lvalue)


State 37

   41 primary: call .
   51 member: call . DOT ID
   52       | call . LEFT_BRACKETS expr RIGHT_BRACKETS
   53 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACKETS     shift, and go to state 98
    LEFT_PARENTHESIS  shift, and go to state 99
    DOT               shift, and go to state 100

    $default  reduce using rule 41 (primary)


State 38

   42 primary: objectdef .

    $default  reduce using rule 42 (primary)


State 39

   11 stmt: block .

    $default  reduce using rule 11 (stmt)


State 40

   12 stmt: funcdef .

    $default  reduce using rule 12 (stmt)


State 41

   73 funcdef: funcprefix . funcargs funcbody

    LEFT_PARENTHESIS  shift, and go to state 101

    funcargs  go to state 102


State 42

   44 primary: const .

    $default  reduce using rule 44 (primary)


State 43

    5 stmt: ifstmt .

    $default  reduce using rule 5 (stmt)


State 44

   93 ifstmt: ifprefix . stmt
   94       | ifprefix . stmt elseprefix stmt

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    IF                shift, and go to state 8
    WHILE             shift, and go to state 9
    FOR               shift, and go to state 10
    FUNCTION          shift, and go to state 11
    RETURN            shift, and go to state 12
    BREAK             shift, and go to state 13
    CONTINUE          shift, and go to state 14
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACES       shift, and go to state 23
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    SEMICOLON         shift, and go to state 26
    DOUBLE_COLON      shift, and go to state 27

    stmt          go to state 103
    breakstmt     go to state 29
    continuestmt  go to state 30
    expr          go to state 31
    term          go to state 32
    assignexpr    go to state 33
    primary       go to state 34
    lvalue        go to state 35
    member        go to state 36
    call          go to state 37
    objectdef     go to state 38
    block         go to state 39
    funcdef       go to state 40
    funcprefix    go to state 41
    const         go to state 42
    ifstmt        go to state 43
    ifprefix      go to state 44
    whilestmt     go to state 45
    whilestart    go to state 46
    forstmt       go to state 47
    forprefix     go to state 48
    returnstmt    go to state 49


State 45

    6 stmt: whilestmt .

    $default  reduce using rule 6 (stmt)


State 46

   97 whilestmt: whilestart . whilecond loopstmt

    LEFT_PARENTHESIS  shift, and go to state 104

    whilecond  go to state 105


State 47

    7 stmt: forstmt .

    $default  reduce using rule 7 (stmt)


State 48

  103 forstmt: forprefix . N elist RIGHT_PARENTHESIS N loopstmt N

    $default  reduce using rule 106 (N)

    N  go to state 106


State 49

    8 stmt: returnstmt .

    $default  reduce using rule 8 (stmt)


State 50

   96 ifprefix: IF LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    expr        go to state 107
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 51

  104 forprefix: FOR LEFT_PARENTHESIS . elist SEMICOLON M expr SEMICOLON

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    $default  reduce using rule 61 (elist)

    expr        go to state 67
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    elist       go to state 108
    objectdef   go to state 38
    const       go to state 42


State 52

   78 funcname: ID .

    $default  reduce using rule 78 (funcname)


State 53

   77 funcprefix: FUNCTION funcname .

    $default  reduce using rule 77 (funcprefix)


State 54

  108 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 108 (returnstmt)


State 55

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
<<<<<<< HEAD
   28     | expr . AND expr
   29     | expr . OR expr
  107 returnstmt: RETURN expr . SEMICOLON

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MULTIPLIES     shift, and go to state 78
    DIVIDES        shift, and go to state 79
    MODULUS        shift, and go to state 80
    EQUAL          shift, and go to state 81
    INEQUAL        shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    SEMICOLON      shift, and go to state 109
=======
   28     | expr . AND M expr
   29     | expr . OR M expr
  107 returnstmt: RETURN expr . SEMICOLON

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULTIPLIES     shift, and go to state 77
    DIVIDES        shift, and go to state 78
    MODULUS        shift, and go to state 79
    EQUAL          shift, and go to state 80
    INEQUAL        shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    SEMICOLON      shift, and go to state 108
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d


State 56

   14 breakstmt: BREAK SEMICOLON .

    $default  reduce using rule 14 (breakstmt)


State 57

   15 continuestmt: CONTINUE SEMICOLON .

    $default  reduce using rule 15 (continuestmt)


State 58

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
   28     | expr . AND M expr
   29     | expr . OR M expr
   33 term: NOT expr .

    $default  reduce using rule 33 (term)


State 59

   46 lvalue: LOCAL ID .

    $default  reduce using rule 46 (lvalue)


State 60

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
   28     | expr . AND M expr
   29     | expr . OR M expr
   32 term: MINUS expr .

    MULTIPLIES  shift, and go to state 78
    DIVIDES     shift, and go to state 79
    MODULUS     shift, and go to state 80

    $default  reduce using rule 32 (term)


State 61

   55 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION  shift, and go to state 11

    funcdef     go to state 110
    funcprefix  go to state 41


State 62

   34 term: INCREMENT lvalue .
   49 member: lvalue . DOT ID
   50       | lvalue . LEFT_BRACKETS expr RIGHT_BRACKETS
   54 call: lvalue . callsuffix

    LEFT_BRACKETS     shift, and go to state 91
    LEFT_PARENTHESIS  shift, and go to state 92
    DOT               shift, and go to state 93
    DOUBLE_DOT        shift, and go to state 94

    $default  reduce using rule 34 (term)

    callsuffix  go to state 95
    normcall    go to state 96
    methodcall  go to state 97


State 63

   51 member: call . DOT ID
   52       | call . LEFT_BRACKETS expr RIGHT_BRACKETS
   53 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACKETS     shift, and go to state 98
    LEFT_PARENTHESIS  shift, and go to state 99
    DOT               shift, and go to state 100


State 64

   36 term: DECREMENT lvalue .
   49 member: lvalue . DOT ID
   50       | lvalue . LEFT_BRACKETS expr RIGHT_BRACKETS
   54 call: lvalue . callsuffix

    LEFT_BRACKETS     shift, and go to state 91
    LEFT_PARENTHESIS  shift, and go to state 92
    DOT               shift, and go to state 93
    DOUBLE_DOT        shift, and go to state 94

    $default  reduce using rule 36 (term)

    callsuffix  go to state 95
    normcall    go to state 96
    methodcall  go to state 97


State 65

   72 block: LEFT_BRACES $@2 . stmts RIGHT_BRACES

    $default  reduce using rule 3 (stmts)

    stmts  go to state 111


State 66

   70 indexedelem: LEFT_BRACES . expr $@1 COLON expr RIGHT_BRACES

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    expr        go to state 112
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 67

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
   28     | expr . AND M expr
   29     | expr . OR M expr
   60 elist: expr . elists

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MULTIPLIES     shift, and go to state 78
    DIVIDES        shift, and go to state 79
    MODULUS        shift, and go to state 80
    EQUAL          shift, and go to state 81
    INEQUAL        shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    COMMA          shift, and go to state 113

    $default  reduce using rule 63 (elists)

    elists  go to state 114


State 68

   64 objectdef: LEFT_BRACKETS elist . RIGHT_BRACKETS

    RIGHT_BRACKETS  shift, and go to state 115


State 69

   65 objectdef: LEFT_BRACKETS indexed . RIGHT_BRACKETS

    RIGHT_BRACKETS  shift, and go to state 116


State 70

   66 indexed: indexedelem . indexeds

    COMMA  shift, and go to state 117

    $default  reduce using rule 68 (indexeds)

    indexeds  go to state 118


State 71

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
   28     | expr . AND M expr
   29     | expr . OR M expr
   31 term: LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    AND                shift, and go to state 74
    OR                 shift, and go to state 75
    PLUS               shift, and go to state 76
    MINUS              shift, and go to state 77
    MULTIPLIES         shift, and go to state 78
    DIVIDES            shift, and go to state 79
    MODULUS            shift, and go to state 80
    EQUAL              shift, and go to state 81
    INEQUAL            shift, and go to state 82
    GREATER            shift, and go to state 83
    LESS               shift, and go to state 84
    GREATER_EQUAL      shift, and go to state 85
    LESS_EQUAL         shift, and go to state 86
    RIGHT_PARENTHESIS  shift, and go to state 119


State 72

   43 primary: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS
   55 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 120


State 73

   47 lvalue: DOUBLE_COLON ID .

    $default  reduce using rule 47 (lvalue)


<<<<<<< HEAD
State 74

   28 expr: expr AND . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    expr        go to state 121
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42
=======
State 73

   28 expr: expr AND . M expr

    $default  reduce using rule 105 (M)

    M  go to state 120


State 74

   29 expr: expr OR . M expr

    $default  reduce using rule 105 (M)

    M  go to state 121
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d


State 75

   29 expr: expr OR . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    expr        go to state 122
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 76

   17 expr: expr PLUS . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    expr        go to state 123
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 77

   18 expr: expr MINUS . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    expr        go to state 124
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 78

   19 expr: expr MULTIPLIES . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    expr        go to state 125
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 79

   20 expr: expr DIVIDES . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    expr        go to state 126
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 80

   21 expr: expr MODULUS . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    expr        go to state 127
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 81

   26 expr: expr EQUAL . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    expr        go to state 128
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 82

   27 expr: expr INEQUAL . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    expr        go to state 129
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 83

   22 expr: expr GREATER . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    expr        go to state 130
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 84

   24 expr: expr LESS . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    expr        go to state 131
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 85

   23 expr: expr GREATER_EQUAL . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    expr        go to state 132
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 86

   25 expr: expr LESS_EQUAL . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    expr        go to state 133
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 87

    4 stmt: expr SEMICOLON .

    $default  reduce using rule 4 (stmt)


State 88

   39 assignexpr: lvalue ASSIGN . expr

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    expr        go to state 134
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 89

   35 term: lvalue INCREMENT .

    $default  reduce using rule 35 (term)


State 90

   37 term: lvalue DECREMENT .

    $default  reduce using rule 37 (term)


State 91

   50 member: lvalue LEFT_BRACKETS . expr RIGHT_BRACKETS

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    expr        go to state 135
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 92

   58 normcall: LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    $default  reduce using rule 61 (elist)

    expr        go to state 67
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    elist       go to state 136
    objectdef   go to state 38
    const       go to state 42


State 93

   49 member: lvalue DOT . ID

    ID  shift, and go to state 137


State 94

   59 methodcall: DOUBLE_DOT . ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    ID  shift, and go to state 138


State 95

   54 call: lvalue callsuffix .

    $default  reduce using rule 54 (call)


State 96

   56 callsuffix: normcall .

    $default  reduce using rule 56 (callsuffix)


State 97

   57 callsuffix: methodcall .

    $default  reduce using rule 57 (callsuffix)


State 98

   52 member: call LEFT_BRACKETS . expr RIGHT_BRACKETS

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    expr        go to state 139
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 99

   53 call: call LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    $default  reduce using rule 61 (elist)

    expr        go to state 67
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    elist       go to state 140
    objectdef   go to state 38
    const       go to state 42


State 100

   51 member: call DOT . ID

    ID  shift, and go to state 141


State 101

   75 funcargs: LEFT_PARENTHESIS . $@3 idlist RIGHT_PARENTHESIS

    $default  reduce using rule 74 ($@3)

<<<<<<< HEAD
    $@2  go to state 142
=======
    $@3  go to state 141
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d


State 102

   73 funcdef: funcprefix funcargs . funcbody

    LEFT_BRACES  shift, and go to state 143

    funcbody   go to state 144
    funcblock  go to state 145


State 103

   93 ifstmt: ifprefix stmt .
   94       | ifprefix stmt . elseprefix stmt

    ELSE  shift, and go to state 146

    ELSE      [reduce using rule 93 (ifstmt)]
    $default  reduce using rule 93 (ifstmt)

    elseprefix  go to state 147


State 104

   99 whilecond: LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    expr        go to state 148
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 105

   97 whilestmt: whilestart whilecond . loopstmt

    $default  reduce using rule 101 (loopstart)

    loopstmt   go to state 149
    loopstart  go to state 150


State 106

  103 forstmt: forprefix N . elist RIGHT_PARENTHESIS N loopstmt N

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    $default  reduce using rule 61 (elist)

    expr        go to state 67
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    elist       go to state 151
    objectdef   go to state 38
    const       go to state 42


State 107

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
<<<<<<< HEAD
   28     | expr . AND expr
   29     | expr . OR expr
   96 ifprefix: IF LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    AND                shift, and go to state 74
    OR                 shift, and go to state 75
    PLUS               shift, and go to state 76
    MINUS              shift, and go to state 77
    MULTIPLIES         shift, and go to state 78
    DIVIDES            shift, and go to state 79
    MODULUS            shift, and go to state 80
    EQUAL              shift, and go to state 81
    INEQUAL            shift, and go to state 82
    GREATER            shift, and go to state 83
    LESS               shift, and go to state 84
    GREATER_EQUAL      shift, and go to state 85
    LESS_EQUAL         shift, and go to state 86
    RIGHT_PARENTHESIS  shift, and go to state 152
=======
   28     | expr . AND M expr
   29     | expr . OR M expr
   96 ifprefix: IF LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    AND                shift, and go to state 73
    OR                 shift, and go to state 74
    PLUS               shift, and go to state 75
    MINUS              shift, and go to state 76
    MULTIPLIES         shift, and go to state 77
    DIVIDES            shift, and go to state 78
    MODULUS            shift, and go to state 79
    EQUAL              shift, and go to state 80
    INEQUAL            shift, and go to state 81
    GREATER            shift, and go to state 82
    LESS               shift, and go to state 83
    GREATER_EQUAL      shift, and go to state 84
    LESS_EQUAL         shift, and go to state 85
    RIGHT_PARENTHESIS  shift, and go to state 151
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d


State 108

  104 forprefix: FOR LEFT_PARENTHESIS elist . SEMICOLON M expr SEMICOLON

    SEMICOLON  shift, and go to state 153


State 109

  107 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 107 (returnstmt)


State 110

   55 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 154


State 111

    2 stmts: stmts . stmt
   72 block: LEFT_BRACES $@2 stmts . RIGHT_BRACES

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    IF                shift, and go to state 8
    WHILE             shift, and go to state 9
    FOR               shift, and go to state 10
    FUNCTION          shift, and go to state 11
    RETURN            shift, and go to state 12
    BREAK             shift, and go to state 13
    CONTINUE          shift, and go to state 14
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACES       shift, and go to state 23
    RIGHT_BRACES      shift, and go to state 155
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    SEMICOLON         shift, and go to state 26
    DOUBLE_COLON      shift, and go to state 27

    stmt          go to state 28
    breakstmt     go to state 29
    continuestmt  go to state 30
    expr          go to state 31
    term          go to state 32
    assignexpr    go to state 33
    primary       go to state 34
    lvalue        go to state 35
    member        go to state 36
    call          go to state 37
    objectdef     go to state 38
    block         go to state 39
    funcdef       go to state 40
    funcprefix    go to state 41
    const         go to state 42
    ifstmt        go to state 43
    ifprefix      go to state 44
    whilestmt     go to state 45
    whilestart    go to state 46
    forstmt       go to state 47
    forprefix     go to state 48
    returnstmt    go to state 49


State 112

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
   28     | expr . AND M expr
   29     | expr . OR M expr
   70 indexedelem: LEFT_BRACES expr . $@1 COLON expr RIGHT_BRACES

<<<<<<< HEAD
    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MULTIPLIES     shift, and go to state 78
    DIVIDES        shift, and go to state 79
    MODULUS        shift, and go to state 80
    EQUAL          shift, and go to state 81
    INEQUAL        shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    COLON          shift, and go to state 156
=======
    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULTIPLIES     shift, and go to state 77
    DIVIDES        shift, and go to state 78
    MODULUS        shift, and go to state 79
    EQUAL          shift, and go to state 80
    INEQUAL        shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    $default  reduce using rule 69 ($@1)

    $@1  go to state 155
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d


State 113

   62 elists: COMMA . expr elists

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    expr        go to state 157
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 114

   60 elist: expr elists .

    $default  reduce using rule 60 (elist)


State 115

   64 objectdef: LEFT_BRACKETS elist RIGHT_BRACKETS .

    $default  reduce using rule 64 (objectdef)


State 116

   65 objectdef: LEFT_BRACKETS indexed RIGHT_BRACKETS .

    $default  reduce using rule 65 (objectdef)


State 117

   67 indexeds: COMMA . indexed

    LEFT_BRACES  shift, and go to state 66

    indexed      go to state 158
    indexedelem  go to state 70


State 118

   66 indexed: indexedelem indexeds .

    $default  reduce using rule 66 (indexed)


State 119

   31 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 31 (term)


State 120

   43 primary: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS .
   55 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 159

    $default  reduce using rule 43 (primary)


State 121

   28 expr: expr AND M . expr

<<<<<<< HEAD
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MULTIPLIES     shift, and go to state 78
    DIVIDES        shift, and go to state 79
    MODULUS        shift, and go to state 80
    EQUAL          shift, and go to state 81
    INEQUAL        shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
=======
    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

    expr        go to state 159
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 122

   29 expr: expr OR M . expr

<<<<<<< HEAD
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MULTIPLIES     shift, and go to state 78
    DIVIDES        shift, and go to state 79
    MODULUS        shift, and go to state 80
    EQUAL          shift, and go to state 81
    INEQUAL        shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
=======
    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

    expr        go to state 160
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 123

   17 expr: expr . PLUS expr
   17     | expr PLUS expr .
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
   28     | expr . AND M expr
   29     | expr . OR M expr

    MULTIPLIES  shift, and go to state 78
    DIVIDES     shift, and go to state 79
    MODULUS     shift, and go to state 80

    $default  reduce using rule 17 (expr)


State 124

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   18     | expr MINUS expr .
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
   28     | expr . AND M expr
   29     | expr . OR M expr

    MULTIPLIES  shift, and go to state 78
    DIVIDES     shift, and go to state 79
    MODULUS     shift, and go to state 80

    $default  reduce using rule 18 (expr)


State 125

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   19     | expr MULTIPLIES expr .
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
   28     | expr . AND M expr
   29     | expr . OR M expr

    $default  reduce using rule 19 (expr)


State 126

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   20     | expr DIVIDES expr .
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
   28     | expr . AND M expr
   29     | expr . OR M expr

    $default  reduce using rule 20 (expr)


State 127

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   21     | expr MODULUS expr .
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
   28     | expr . AND M expr
   29     | expr . OR M expr

    $default  reduce using rule 21 (expr)


State 128

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   26     | expr EQUAL expr .
   27     | expr . INEQUAL expr
   28     | expr . AND M expr
   29     | expr . OR M expr

    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MULTIPLIES     shift, and go to state 78
    DIVIDES        shift, and go to state 79
    MODULUS        shift, and go to state 80
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86

    EQUAL    error (nonassociative)
    INEQUAL  error (nonassociative)

    $default  reduce using rule 26 (expr)


State 129

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
   27     | expr INEQUAL expr .
   28     | expr . AND M expr
   29     | expr . OR M expr

    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MULTIPLIES     shift, and go to state 78
    DIVIDES        shift, and go to state 79
    MODULUS        shift, and go to state 80
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86

    EQUAL    error (nonassociative)
    INEQUAL  error (nonassociative)

    $default  reduce using rule 27 (expr)


State 130

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   22     | expr GREATER expr .
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
   28     | expr . AND M expr
   29     | expr . OR M expr

    PLUS        shift, and go to state 76
    MINUS       shift, and go to state 77
    MULTIPLIES  shift, and go to state 78
    DIVIDES     shift, and go to state 79
    MODULUS     shift, and go to state 80

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 22 (expr)


State 131

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   24     | expr LESS expr .
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
   28     | expr . AND M expr
   29     | expr . OR M expr

    PLUS        shift, and go to state 76
    MINUS       shift, and go to state 77
    MULTIPLIES  shift, and go to state 78
    DIVIDES     shift, and go to state 79
    MODULUS     shift, and go to state 80

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 24 (expr)


State 132

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   23     | expr GREATER_EQUAL expr .
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
   28     | expr . AND M expr
   29     | expr . OR M expr

    PLUS        shift, and go to state 76
    MINUS       shift, and go to state 77
    MULTIPLIES  shift, and go to state 78
    DIVIDES     shift, and go to state 79
    MODULUS     shift, and go to state 80

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 23 (expr)


State 133

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   25     | expr LESS_EQUAL expr .
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
   28     | expr . AND M expr
   29     | expr . OR M expr

    PLUS        shift, and go to state 76
    MINUS       shift, and go to state 77
    MULTIPLIES  shift, and go to state 78
    DIVIDES     shift, and go to state 79
    MODULUS     shift, and go to state 80

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 25 (expr)


State 134

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
   28     | expr . AND M expr
   29     | expr . OR M expr
   39 assignexpr: lvalue ASSIGN expr .

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MULTIPLIES     shift, and go to state 78
    DIVIDES        shift, and go to state 79
    MODULUS        shift, and go to state 80
    EQUAL          shift, and go to state 81
    INEQUAL        shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86

    $default  reduce using rule 39 (assignexpr)


State 135

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
   28     | expr . AND M expr
   29     | expr . OR M expr
   50 member: lvalue LEFT_BRACKETS expr . RIGHT_BRACKETS

<<<<<<< HEAD
    AND             shift, and go to state 74
    OR              shift, and go to state 75
    PLUS            shift, and go to state 76
    MINUS           shift, and go to state 77
    MULTIPLIES      shift, and go to state 78
    DIVIDES         shift, and go to state 79
    MODULUS         shift, and go to state 80
    EQUAL           shift, and go to state 81
    INEQUAL         shift, and go to state 82
    GREATER         shift, and go to state 83
    LESS            shift, and go to state 84
    GREATER_EQUAL   shift, and go to state 85
    LESS_EQUAL      shift, and go to state 86
    RIGHT_BRACKETS  shift, and go to state 160
=======
    AND             shift, and go to state 73
    OR              shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULTIPLIES      shift, and go to state 77
    DIVIDES         shift, and go to state 78
    MODULUS         shift, and go to state 79
    EQUAL           shift, and go to state 80
    INEQUAL         shift, and go to state 81
    GREATER         shift, and go to state 82
    LESS            shift, and go to state 83
    GREATER_EQUAL   shift, and go to state 84
    LESS_EQUAL      shift, and go to state 85
    RIGHT_BRACKETS  shift, and go to state 161
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d


State 136

   58 normcall: LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

<<<<<<< HEAD
    RIGHT_PARENTHESIS  shift, and go to state 161
=======
    RIGHT_PARENTHESIS  shift, and go to state 162
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d


State 137

   49 member: lvalue DOT ID .

    $default  reduce using rule 49 (member)


State 138

   59 methodcall: DOUBLE_DOT ID . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

<<<<<<< HEAD
    LEFT_PARENTHESIS  shift, and go to state 162
=======
    LEFT_PARENTHESIS  shift, and go to state 163
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d


State 139

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
   28     | expr . AND M expr
   29     | expr . OR M expr
   52 member: call LEFT_BRACKETS expr . RIGHT_BRACKETS

<<<<<<< HEAD
    AND             shift, and go to state 74
    OR              shift, and go to state 75
    PLUS            shift, and go to state 76
    MINUS           shift, and go to state 77
    MULTIPLIES      shift, and go to state 78
    DIVIDES         shift, and go to state 79
    MODULUS         shift, and go to state 80
    EQUAL           shift, and go to state 81
    INEQUAL         shift, and go to state 82
    GREATER         shift, and go to state 83
    LESS            shift, and go to state 84
    GREATER_EQUAL   shift, and go to state 85
    LESS_EQUAL      shift, and go to state 86
    RIGHT_BRACKETS  shift, and go to state 163
=======
    AND             shift, and go to state 73
    OR              shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULTIPLIES      shift, and go to state 77
    DIVIDES         shift, and go to state 78
    MODULUS         shift, and go to state 79
    EQUAL           shift, and go to state 80
    INEQUAL         shift, and go to state 81
    GREATER         shift, and go to state 82
    LESS            shift, and go to state 83
    GREATER_EQUAL   shift, and go to state 84
    LESS_EQUAL      shift, and go to state 85
    RIGHT_BRACKETS  shift, and go to state 164
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d


State 140

   53 call: call LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

<<<<<<< HEAD
    RIGHT_PARENTHESIS  shift, and go to state 164
=======
    RIGHT_PARENTHESIS  shift, and go to state 165
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d


State 141

   51 member: call DOT ID .

    $default  reduce using rule 51 (member)


State 142

   75 funcargs: LEFT_PARENTHESIS $@3 . idlist RIGHT_PARENTHESIS

<<<<<<< HEAD
    ID  shift, and go to state 165

    $default  reduce using rule 89 (idlist)

    idlist  go to state 166
=======
    ID  shift, and go to state 166

    $default  reduce using rule 89 (idlist)

    idlist  go to state 167
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d


State 143

   81 funcblock: LEFT_BRACES . $@4 stmts RIGHT_BRACES

    $default  reduce using rule 80 ($@4)

<<<<<<< HEAD
    $@3  go to state 167
=======
    $@4  go to state 168
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d


State 144

   73 funcdef: funcprefix funcargs funcbody .

    $default  reduce using rule 73 (funcdef)


State 145

   76 funcbody: funcblock .

    $default  reduce using rule 76 (funcbody)


State 146

   95 elseprefix: ELSE .

    $default  reduce using rule 95 (elseprefix)


State 147

   94 ifstmt: ifprefix stmt elseprefix . stmt

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
<<<<<<< HEAD
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    IF                shift, and go to state 8
    WHILE             shift, and go to state 9
    FOR               shift, and go to state 10
    FUNCTION          shift, and go to state 11
    RETURN            shift, and go to state 12
    BREAK             shift, and go to state 13
    CONTINUE          shift, and go to state 14
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACES       shift, and go to state 23
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    SEMICOLON         shift, and go to state 26
    DOUBLE_COLON      shift, and go to state 27

    stmt          go to state 168
    breakstmt     go to state 29
    continuestmt  go to state 30
    expr          go to state 31
    term          go to state 32
    assignexpr    go to state 33
    primary       go to state 34
    lvalue        go to state 35
    member        go to state 36
    call          go to state 37
    objectdef     go to state 38
    block         go to state 39
    funcdef       go to state 40
    funcprefix    go to state 41
    const         go to state 42
    ifstmt        go to state 43
    ifprefix      go to state 44
    whilestmt     go to state 45
    whilestart    go to state 46
    forstmt       go to state 47
    forprefix     go to state 48
    returnstmt    go to state 49
=======
    STRING            shift, and go to state 6
    IF                shift, and go to state 7
    WHILE             shift, and go to state 8
    FOR               shift, and go to state 9
    FUNCTION          shift, and go to state 10
    RETURN            shift, and go to state 11
    BREAK             shift, and go to state 12
    CONTINUE          shift, and go to state 13
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACES       shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    SEMICOLON         shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 26

    stmt          go to state 169
    breakstmt     go to state 28
    continuestmt  go to state 29
    expr          go to state 30
    term          go to state 31
    assignexpr    go to state 32
    primary       go to state 33
    lvalue        go to state 34
    member        go to state 35
    call          go to state 36
    objectdef     go to state 37
    block         go to state 38
    funcdef       go to state 39
    funcprefix    go to state 40
    const         go to state 41
    ifstmt        go to state 42
    ifprefix      go to state 43
    whilestmt     go to state 44
    whilestart    go to state 45
    forstmt       go to state 46
    forprefix     go to state 47
    returnstmt    go to state 48
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d


State 148

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
<<<<<<< HEAD
   28     | expr . AND expr
   29     | expr . OR expr
   99 whilecond: LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    AND                shift, and go to state 74
    OR                 shift, and go to state 75
    PLUS               shift, and go to state 76
    MINUS              shift, and go to state 77
    MULTIPLIES         shift, and go to state 78
    DIVIDES            shift, and go to state 79
    MODULUS            shift, and go to state 80
    EQUAL              shift, and go to state 81
    INEQUAL            shift, and go to state 82
    GREATER            shift, and go to state 83
    LESS               shift, and go to state 84
    GREATER_EQUAL      shift, and go to state 85
    LESS_EQUAL         shift, and go to state 86
    RIGHT_PARENTHESIS  shift, and go to state 169
=======
   28     | expr . AND M expr
   29     | expr . OR M expr
   99 whilecond: LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    AND                shift, and go to state 73
    OR                 shift, and go to state 74
    PLUS               shift, and go to state 75
    MINUS              shift, and go to state 76
    MULTIPLIES         shift, and go to state 77
    DIVIDES            shift, and go to state 78
    MODULUS            shift, and go to state 79
    EQUAL              shift, and go to state 80
    INEQUAL            shift, and go to state 81
    GREATER            shift, and go to state 82
    LESS               shift, and go to state 83
    GREATER_EQUAL      shift, and go to state 84
    LESS_EQUAL         shift, and go to state 85
    RIGHT_PARENTHESIS  shift, and go to state 170
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d


State 149

   97 whilestmt: whilestart whilecond loopstmt .

    $default  reduce using rule 97 (whilestmt)


State 150

  100 loopstmt: loopstart . stmt loopend

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
<<<<<<< HEAD
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    IF                shift, and go to state 8
    WHILE             shift, and go to state 9
    FOR               shift, and go to state 10
    FUNCTION          shift, and go to state 11
    RETURN            shift, and go to state 12
    BREAK             shift, and go to state 13
    CONTINUE          shift, and go to state 14
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACES       shift, and go to state 23
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    SEMICOLON         shift, and go to state 26
    DOUBLE_COLON      shift, and go to state 27

    stmt          go to state 170
    breakstmt     go to state 29
    continuestmt  go to state 30
    expr          go to state 31
    term          go to state 32
    assignexpr    go to state 33
    primary       go to state 34
    lvalue        go to state 35
    member        go to state 36
    call          go to state 37
    objectdef     go to state 38
    block         go to state 39
    funcdef       go to state 40
    funcprefix    go to state 41
    const         go to state 42
    ifstmt        go to state 43
    ifprefix      go to state 44
    whilestmt     go to state 45
    whilestart    go to state 46
    forstmt       go to state 47
    forprefix     go to state 48
    returnstmt    go to state 49
=======
    STRING            shift, and go to state 6
    IF                shift, and go to state 7
    WHILE             shift, and go to state 8
    FOR               shift, and go to state 9
    FUNCTION          shift, and go to state 10
    RETURN            shift, and go to state 11
    BREAK             shift, and go to state 12
    CONTINUE          shift, and go to state 13
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACES       shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    SEMICOLON         shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 26

    stmt          go to state 171
    breakstmt     go to state 28
    continuestmt  go to state 29
    expr          go to state 30
    term          go to state 31
    assignexpr    go to state 32
    primary       go to state 33
    lvalue        go to state 34
    member        go to state 35
    call          go to state 36
    objectdef     go to state 37
    block         go to state 38
    funcdef       go to state 39
    funcprefix    go to state 40
    const         go to state 41
    ifstmt        go to state 42
    ifprefix      go to state 43
    whilestmt     go to state 44
    whilestart    go to state 45
    forstmt       go to state 46
    forprefix     go to state 47
    returnstmt    go to state 48
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d


State 151

  103 forstmt: forprefix N elist . RIGHT_PARENTHESIS N loopstmt N

<<<<<<< HEAD
    RIGHT_PARENTHESIS  shift, and go to state 171
=======
    RIGHT_PARENTHESIS  shift, and go to state 172
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d


State 152

   96 ifprefix: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 96 (ifprefix)


State 153

  104 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON . M expr SEMICOLON

    $default  reduce using rule 105 (M)

<<<<<<< HEAD
    M  go to state 172
=======
    M  go to state 173
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d


State 154

   55 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 159


State 155

   72 block: LEFT_BRACES $@2 stmts RIGHT_BRACES .

    $default  reduce using rule 72 (block)


State 156

<<<<<<< HEAD
   69 indexedelem: LEFT_BRACES expr COLON . expr RIGHT_BRACES

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    expr        go to state 173
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42
=======
   70 indexedelem: LEFT_BRACES expr $@1 . COLON expr RIGHT_BRACES

    COLON  shift, and go to state 174
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d


State 157

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
   28     | expr . AND M expr
   29     | expr . OR M expr
   62 elists: COMMA expr . elists

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MULTIPLIES     shift, and go to state 78
    DIVIDES        shift, and go to state 79
    MODULUS        shift, and go to state 80
    EQUAL          shift, and go to state 81
    INEQUAL        shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    COMMA          shift, and go to state 113

    $default  reduce using rule 63 (elists)

<<<<<<< HEAD
    elists  go to state 174
=======
    elists  go to state 175
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d


State 158

   67 indexeds: COMMA indexed .

    $default  reduce using rule 67 (indexeds)


State 159

   55 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    $default  reduce using rule 61 (elist)

<<<<<<< HEAD
    expr        go to state 67
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    elist       go to state 175
    objectdef   go to state 38
    const       go to state 42
=======
    expr        go to state 66
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    elist       go to state 176
    objectdef   go to state 37
    const       go to state 41
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d


State 160

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
   28     | expr . AND M expr
   28     | expr AND M expr .
   29     | expr . OR M expr

    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULTIPLIES     shift, and go to state 77
    DIVIDES        shift, and go to state 78
    MODULUS        shift, and go to state 79
    EQUAL          shift, and go to state 80
    INEQUAL        shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    $default  reduce using rule 28 (expr)


State 160

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
   28     | expr . AND M expr
   29     | expr . OR M expr
   29     | expr OR M expr .

    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULTIPLIES     shift, and go to state 77
    DIVIDES        shift, and go to state 78
    MODULUS        shift, and go to state 79
    EQUAL          shift, and go to state 80
    INEQUAL        shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    $default  reduce using rule 29 (expr)


State 161

   50 member: lvalue LEFT_BRACKETS expr RIGHT_BRACKETS .

    $default  reduce using rule 50 (member)


<<<<<<< HEAD
State 161
=======
State 162
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

   58 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 58 (normcall)


<<<<<<< HEAD
State 162
=======
State 163
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

   59 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    $default  reduce using rule 61 (elist)

<<<<<<< HEAD
    expr        go to state 67
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    elist       go to state 176
    objectdef   go to state 38
    const       go to state 42


State 163
=======
    expr        go to state 66
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    elist       go to state 177
    objectdef   go to state 37
    const       go to state 41


State 164
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

   52 member: call LEFT_BRACKETS expr RIGHT_BRACKETS .

    $default  reduce using rule 52 (member)


<<<<<<< HEAD
State 164
=======
State 165
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

   53 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 53 (call)


<<<<<<< HEAD
State 165

   88 idlist: ID . $@4 ids

    $default  reduce using rule 87 ($@4)

    $@4  go to state 177


State 166
=======
State 166

   88 idlist: ID . $@5 ids

    $default  reduce using rule 87 ($@5)

    $@5  go to state 178


State 167
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

   75 funcargs: LEFT_PARENTHESIS $@3 idlist . RIGHT_PARENTHESIS

<<<<<<< HEAD
    RIGHT_PARENTHESIS  shift, and go to state 178


State 167
=======
    RIGHT_PARENTHESIS  shift, and go to state 179


State 168
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

   81 funcblock: LEFT_BRACES $@4 . stmts RIGHT_BRACES

    $default  reduce using rule 3 (stmts)

<<<<<<< HEAD
    stmts  go to state 179


State 168
=======
    stmts  go to state 180


State 169
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

   94 ifstmt: ifprefix stmt elseprefix stmt .

    $default  reduce using rule 94 (ifstmt)


<<<<<<< HEAD
State 169
=======
State 170
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

   99 whilecond: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 99 (whilecond)


<<<<<<< HEAD
State 170
=======
State 171
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

  100 loopstmt: loopstart stmt . loopend

    $default  reduce using rule 102 (loopend)

<<<<<<< HEAD
    loopend  go to state 180


State 171
=======
    loopend  go to state 181


State 172
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

  103 forstmt: forprefix N elist RIGHT_PARENTHESIS . N loopstmt N

    $default  reduce using rule 106 (N)

<<<<<<< HEAD
    N  go to state 181


State 172
=======
    N  go to state 182


State 173
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

  104 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON M . expr SEMICOLON

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
<<<<<<< HEAD
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 27

    expr        go to state 182
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 173
=======
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26

    expr        go to state 183
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41


State 174
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

   70 indexedelem: LEFT_BRACES expr $@1 COLON . expr RIGHT_BRACES

<<<<<<< HEAD
    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MULTIPLIES     shift, and go to state 78
    DIVIDES        shift, and go to state 79
    MODULUS        shift, and go to state 80
    EQUAL          shift, and go to state 81
    INEQUAL        shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    RIGHT_BRACES   shift, and go to state 183
=======
    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    DOUBLE_COLON      shift, and go to state 26
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

    expr        go to state 184
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    member      go to state 35
    call        go to state 36
    objectdef   go to state 37
    const       go to state 41

<<<<<<< HEAD
State 174
=======

State 175
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

   62 elists: COMMA expr elists .

    $default  reduce using rule 62 (elists)


<<<<<<< HEAD
State 175

   55 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 184


State 176

   59 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 185


State 177

   88 idlist: ID $@4 . ids

    COMMA  shift, and go to state 186

    $default  reduce using rule 92 (ids)

    ids  go to state 187


State 178
=======
State 176

   55 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 185


State 177

   59 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 186


State 178

   88 idlist: ID $@5 . ids

    COMMA  shift, and go to state 187

    $default  reduce using rule 92 (ids)

    ids  go to state 188


State 179
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

   75 funcargs: LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS .

    $default  reduce using rule 75 (funcargs)


<<<<<<< HEAD
State 179
=======
State 180
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

    2 stmts: stmts . stmt
   81 funcblock: LEFT_BRACES $@4 stmts . RIGHT_BRACES

    ID                shift, and go to state 4
    INTCONST          shift, and go to state 5
<<<<<<< HEAD
    REALCONST         shift, and go to state 6
    STRING            shift, and go to state 7
    IF                shift, and go to state 8
    WHILE             shift, and go to state 9
    FOR               shift, and go to state 10
    FUNCTION          shift, and go to state 11
    RETURN            shift, and go to state 12
    BREAK             shift, and go to state 13
    CONTINUE          shift, and go to state 14
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    INCREMENT         shift, and go to state 21
    DECREMENT         shift, and go to state 22
    LEFT_BRACES       shift, and go to state 23
    RIGHT_BRACES      shift, and go to state 188
    LEFT_BRACKETS     shift, and go to state 24
    LEFT_PARENTHESIS  shift, and go to state 25
    SEMICOLON         shift, and go to state 26
    DOUBLE_COLON      shift, and go to state 27

    stmt          go to state 28
    breakstmt     go to state 29
    continuestmt  go to state 30
    expr          go to state 31
    term          go to state 32
    assignexpr    go to state 33
    primary       go to state 34
    lvalue        go to state 35
    member        go to state 36
    call          go to state 37
    objectdef     go to state 38
    block         go to state 39
    funcdef       go to state 40
    funcprefix    go to state 41
    const         go to state 42
    ifstmt        go to state 43
    ifprefix      go to state 44
    whilestmt     go to state 45
    whilestart    go to state 46
    forstmt       go to state 47
    forprefix     go to state 48
    returnstmt    go to state 49


State 180
=======
    STRING            shift, and go to state 6
    IF                shift, and go to state 7
    WHILE             shift, and go to state 8
    FOR               shift, and go to state 9
    FUNCTION          shift, and go to state 10
    RETURN            shift, and go to state 11
    BREAK             shift, and go to state 12
    CONTINUE          shift, and go to state 13
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    MINUS             shift, and go to state 19
    INCREMENT         shift, and go to state 20
    DECREMENT         shift, and go to state 21
    LEFT_BRACES       shift, and go to state 22
    RIGHT_BRACES      shift, and go to state 189
    LEFT_BRACKETS     shift, and go to state 23
    LEFT_PARENTHESIS  shift, and go to state 24
    SEMICOLON         shift, and go to state 25
    DOUBLE_COLON      shift, and go to state 26

    stmt          go to state 27
    breakstmt     go to state 28
    continuestmt  go to state 29
    expr          go to state 30
    term          go to state 31
    assignexpr    go to state 32
    primary       go to state 33
    lvalue        go to state 34
    member        go to state 35
    call          go to state 36
    objectdef     go to state 37
    block         go to state 38
    funcdef       go to state 39
    funcprefix    go to state 40
    const         go to state 41
    ifstmt        go to state 42
    ifprefix      go to state 43
    whilestmt     go to state 44
    whilestart    go to state 45
    forstmt       go to state 46
    forprefix     go to state 47
    returnstmt    go to state 48


State 181
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

  100 loopstmt: loopstart stmt loopend .

    $default  reduce using rule 100 (loopstmt)


<<<<<<< HEAD
State 181
=======
State 182
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

  103 forstmt: forprefix N elist RIGHT_PARENTHESIS N . loopstmt N

    $default  reduce using rule 101 (loopstart)

<<<<<<< HEAD
    loopstmt   go to state 189
    loopstart  go to state 150


State 182
=======
    loopstmt   go to state 190
    loopstart  go to state 149


State 183
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
<<<<<<< HEAD
   28     | expr . AND expr
   29     | expr . OR expr
  104 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON M expr . SEMICOLON

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MULTIPLIES     shift, and go to state 78
    DIVIDES        shift, and go to state 79
    MODULUS        shift, and go to state 80
    EQUAL          shift, and go to state 81
    INEQUAL        shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    SEMICOLON      shift, and go to state 190


State 183
=======
   28     | expr . AND M expr
   29     | expr . OR M expr
  104 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON M expr . SEMICOLON

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULTIPLIES     shift, and go to state 77
    DIVIDES        shift, and go to state 78
    MODULUS        shift, and go to state 79
    EQUAL          shift, and go to state 80
    INEQUAL        shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    SEMICOLON      shift, and go to state 191


State 184
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLIES expr
   20     | expr . DIVIDES expr
   21     | expr . MODULUS expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . INEQUAL expr
   28     | expr . AND M expr
   29     | expr . OR M expr
   70 indexedelem: LEFT_BRACES expr $@1 COLON expr . RIGHT_BRACES

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULTIPLIES     shift, and go to state 77
    DIVIDES        shift, and go to state 78
    MODULUS        shift, and go to state 79
    EQUAL          shift, and go to state 80
    INEQUAL        shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    RIGHT_BRACES   shift, and go to state 192


<<<<<<< HEAD
State 184
=======
State 185
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

   55 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 55 (call)


<<<<<<< HEAD
State 185
=======
State 186
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

   59 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 59 (methodcall)


<<<<<<< HEAD
State 186

   91 ids: COMMA . ID $@5 ids

    ID  shift, and go to state 191


State 187

   88 idlist: ID $@4 ids .
=======
State 187

   91 ids: COMMA . ID $@6 ids

    ID  shift, and go to state 193


State 188

   88 idlist: ID $@5 ids .
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

    $default  reduce using rule 88 (idlist)


<<<<<<< HEAD
State 188
=======
State 189
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

   81 funcblock: LEFT_BRACES $@4 stmts RIGHT_BRACES .

    $default  reduce using rule 81 (funcblock)


<<<<<<< HEAD
State 189
=======
State 190
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

  103 forstmt: forprefix N elist RIGHT_PARENTHESIS N loopstmt . N

    $default  reduce using rule 106 (N)

<<<<<<< HEAD
    N  go to state 192


State 190
=======
    N  go to state 194


State 191
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

  104 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON M expr SEMICOLON .

    $default  reduce using rule 104 (forprefix)


<<<<<<< HEAD
State 191

   91 ids: COMMA ID . $@5 ids

    $default  reduce using rule 90 ($@5)

    $@5  go to state 193
=======
State 192

   70 indexedelem: LEFT_BRACES expr $@1 COLON expr RIGHT_BRACES .

    $default  reduce using rule 70 (indexedelem)

>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

State 193

<<<<<<< HEAD
State 192

  103 forstmt: forprefix N elist RIGHT_PARENTHESIS N loopstmt N .

    $default  reduce using rule 103 (forstmt)


State 193

   91 ids: COMMA ID $@5 . ids

    COMMA  shift, and go to state 186

    $default  reduce using rule 92 (ids)

    ids  go to state 194
=======
   91 ids: COMMA ID . $@6 ids

    $default  reduce using rule 90 ($@6)

    $@6  go to state 195


State 194

  103 forstmt: forprefix N elist RIGHT_PARENTHESIS N loopstmt N .

    $default  reduce using rule 103 (forstmt)


State 195
>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d

   91 ids: COMMA ID $@6 . ids

<<<<<<< HEAD
State 194

   91 ids: COMMA ID $@5 ids .

=======
    COMMA  shift, and go to state 187

    $default  reduce using rule 92 (ids)

    ids  go to state 196


State 196

   91 ids: COMMA ID $@6 ids .

>>>>>>> 7e16375f79d8aa9f15e08899887a993ec20ad19d
    $default  reduce using rule 91 (ids)
