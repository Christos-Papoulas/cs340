/*
    Test file for the final phase of HY-340: Languages & Compilers
    Computer science dpt, University of Crete, Greece
*/

t = [ { "key1" : 1 }, { "key2" : 2 }, { "key3" : "tria" }, { "key4" : true }, { "key5" : [ nil, 3, 4, nil, 5 ] } ];

print("Table t is: ", t, "\n");

function foo() {
    function lala() {
        function prnt() {
            local t = [ ::t, 2, 3.14, "4", true, false ];
            print("Table t in prnt is: ", t, "\n");
        }
        print("Function prnt printing: ", prnt, " and print: ", print, "\n");
        prnt();
    }
    return lala;
}

f = foo();
f();

stdin = nil;
while (true) {

    if (typeof(stdin) == "string") {
        if (stdin == "exit") {
            break;
        }
    }

    print("input: ");
    stdin = input();
    print("typeof(stdin): ", typeof(stdin), ", value of stdin: ", stdin, "\n");
}

ind = tableindices(t);
//print("Table indices of global t: ", ind, " which has length: ", tablelength(ind), "\n");

function my_print () {

    targs = totalarguments();
    if (targs < 0 or targs > 20) {
        print("ERROR in my_print: arguments reported: ", targs, "\n");
        return nil;
    }

    for (i = 0; i < totalarguments(); ++i) {
    //for (i = 1; i <= totalarguments(); ++i) {
        print(argument(i));
    }
}

////////////////////////////////////////////////////////////////////////
// PRINT FUNCTION HERE

print_function = my_print;
//print_function = print;

////////////////////////////////////////////////////////////////////////

tcopy = tablecopy(t);
print_function("Table copy is: ", tcopy, " ", "and it is printed with print_function", "\n");

function check (variable, type, value) {
    if (typeof(variable) != type) {
        print_function("FAILED type: ", typeof(variable), " != ", type, ", value: ", variable, "\n");
        return nil;
    }
    if (value != variable) {
        print_function("FAILED value: ", variable, " != ", value, "\n");
        return nil;
    }
    print_function("PASSED: value: ", value, " type: ", type, "\n");
}

check(strtonum("foo"), "nil", nil);
check(strtonum("3.12a"), "nil", nil);
check(strtonum("3.141"), "number", 3.141);
check(sqrt(2), "number", 1.41421356237309504880);
check(sqrt(-1), "nil", nil);
check(cos(45), "number", 0.5);
check(sin(45), "number", 0.5);
check(totalarguments(), "nil", nil);
check(argument(0), "nil", nil);


ax = strtonum("12");
print("--->", ax);
